{
    "paths": {
        "/client-access-links": {
            "get": {
                "description": "Retrieves the Client Access Links for the current user",
                "operationId": "getClientAccessLinks",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/ClientAccessLinksResponse"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Client Access Links"
                ]
            },
            "post": {
                "description": "Creates the Client Access Links for the current user",
                "operationId": "postClientAccessLinks",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientAccessLinksPostRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientAccessLinksPostResponse"
                                }
                            }
                        },
                        "description": "Created"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "The list of errors",
                                            "items": {
                                                "$ref": "#/components/schemas/Error"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Client Access Links"
                ]
            }
        },
        "/client-access-links/{guid}": {
            "delete": {
                "description": "Deletes the Client Access Links for the current user",
                "operationId": "deleteClientAccessLinks",
                "parameters": [
                    {
                        "description": "GUID of the client access link",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "The list of errors",
                                            "items": {
                                                "$ref": "#/components/schemas/Error"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Client Access Links"
                ]
            },
            "patch": {
                "description": "Updates the Client Access Links for the current user",
                "operationId": "patchClientAccessLinks",
                "parameters": [
                    {
                        "description": "GUID of the client access link",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientAccessLinksRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientAccessLinksResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "The list of errors",
                                            "items": {
                                                "$ref": "#/components/schemas/Error"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Client Access Links"
                ]
            }
        },
        "/collaboration/summary": {
            "get": {
                "description": "Summary of items in collaboration hub",
                "operationId": "collaborationSummary",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollaborationSummary"
                                }
                            }
                        },
                        "description": "Summary of unread items"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Collaboration Hub"
                ]
            }
        },
        "/companies/collaboration-contacts/query": {
            "post": {
                "description": "Post/Get endpoint to list collaboration contacts",
                "operationId": "postQueryCollaborationContacts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "companies": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "companies": {
                                            "properties": {
                                                "contact_emails": {
                                                    "items": {
                                                        "enum": [
                                                            "john.doe@bitsight.com"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "guid": {
                                                    "$ref": "#/x-common-definitions/guid"
                                                },
                                                "primary_domain": {
                                                    "enum": [
                                                        "bitsight.com"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK - Returns list of collaboration contacts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Contacts"
                ]
            }
        },
        "/companies/features/{feature}": {
            "get": {
                "description": "List of companies associated with the given feature",
                "operationId": "featureCompanyList",
                "parameters": [
                    {
                        "description": "internal name of the feature",
                        "in": "path",
                        "name": "feature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyToFeatureList"
                                }
                            }
                        },
                        "description": "List of companies associated with the given feature"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Feature"
                ]
            }
        },
        "/companies/features/{feature}/bulk": {
            "post": {
                "description": "assign feature to companies or remove from companies",
                "operationId": "featureToCompanies",
                "parameters": [
                    {
                        "description": "internal name of the feature",
                        "in": "path",
                        "name": "feature",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "add": {
                                        "$ref": "#/components/schemas/CompanyFeatureArgs"
                                    },
                                    "delete": {
                                        "$ref": "#/components/schemas/CompanyFeatureArgs"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFeaturePostSummary"
                                }
                            }
                        },
                        "description": "The feature is associated/dissociated with companies"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Feature"
                ]
            }
        },
        "/companies/infrastructure/bulk": {
            "post": {
                "description": "Bulk Manage Infrastructure",
                "operationId": "postManageInfrastructureRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "add": {
                                        "items": {
                                            "$ref": "#/components/schemas/ManageInfrastructureRequest"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Infrastructure request(s) successfully submitted"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/infrastructure/expiration": {
            "post": {
                "description": "Bulk Infrastructure Expiration",
                "operationId": "postCompanyInfraExpirationRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "expirations": {
                                        "items": {
                                            "$ref": "#/components/schemas/CompanyInfraExpirationRequest"
                                        },
                                        "type": "array"
                                    },
                                    "infrastructure_type": {
                                        "description": "The infrastructure type to be expired ('cidr' or 'domain'). Either this field or the one in 'expirations' must be set.",
                                        "enum": [
                                            "cidr",
                                            "domain"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyInfraExpirationRequest"
                                }
                            }
                        },
                        "description": "Expiration request(s) successfully submitted"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/infrastructure/requests": {
            "get": {
                "description": "Get the Infrastructure requests",
                "operationId": "getInfrastructureRequests",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/InfrastructureRequest"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK - Returns list of requests"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/infrastructure/requests/summaries": {
            "get": {
                "description": "Get the Infrastructure request summary for an entity",
                "operationId": "getInfrastructureRequestSummaries",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InfrastructureRequestSummaries"
                                }
                            }
                        },
                        "description": "OK - Returns summary of Infrastructure requests"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/probable-infrastructure/requests": {
            "get": {
                "description": "Get the Probable Infrastructure requests",
                "operationId": "getProbableInfrastructureRequests",
                "parameters": [
                    {
                        "description": "filters by the status slugs",
                        "in": "query",
                        "name": "status.slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filters by a specific list of comma-separated company GUIDs",
                        "in": "query",
                        "name": "company.guid",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filters by a specific request GUID",
                        "in": "query",
                        "name": "request.guid",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    },
                    {
                        "description": "Filter results by the request's creation time equal to value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "requested_by.time",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the request's creation time less than value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "requested_by.time_lt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the request's creation time less or equal to value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "requested_by.time_lte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the request's creation time greater than value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "requested_by.time_gt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the request's creation time greater or equal to value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "requested_by.time_gte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the request's expiration time equal to value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "expiration_time",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the request's expiration time less than value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "expiration_time_lt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the request's expiration time less or equal to value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "expiration_time_lte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the request's expiration time greater than value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "expiration_time_gt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the request's expiration time greater or equal to value.",
                        "example": "2024-10-15T09:08:13Z",
                        "in": "query",
                        "name": "expiration_time_gte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filters by a specific list of comma-separated request GUIDs",
                        "in": "query",
                        "name": "guid",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "description": "The total number of results",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "description": "A set of links to traverse the result set",
                                            "properties": {
                                                "next": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "previous": {
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "results": {
                                            "description": "The actual results page",
                                            "items": {
                                                "$ref": "#/components/schemas/ProbableInfrastructureRequest"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK - Returns list of requests"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "guid": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            },
            "post": {
                "description": "Create a Probable Infrastructure request",
                "operationId": "postProbableInfrastructureRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_guid": {
                                        "$ref": "#/x-common-definitions/company_guid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProbableInfrastructureRequest"
                                }
                            }
                        },
                        "description": "Probable Infrastructure request(s) successfully submitted"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "items": {
                                                "properties": {
                                                    "company_guid": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "items": {
                                                "properties": {
                                                    "company_guid": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Permission Denied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Too Many Requests"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/probable-infrastructure/requests/{guid}/response": {
            "get": {
                "description": "Get the Probable Infrastructure Request esponse",
                "operationId": "getProbableInfrastructureRequestResponse",
                "parameters": [
                    {
                        "description": "GUID of the request",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "enum": [
                                "json",
                                "csv"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "description": "The total number of results",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "description": "A set of links to traverse the result set",
                                            "properties": {
                                                "next": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "previous": {
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "results": {
                                            "description": "The actual results page",
                                            "items": {
                                                "$ref": "#/components/schemas/ProbableInfrastructureRequestResponse"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK - Returns the probable infrastructure for the provided request"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "410": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Request data is no longer available"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/probable-infrastructure/requests/{guid}/response/bulk": {
            "post": {
                "description": "Set Probable Infrastructure Request response decisions",
                "operationId": "postProbableInfrastructureRequestResponseBulk",
                "parameters": [
                    {
                        "description": "GUID of the request",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "modify": {
                                        "items": {
                                            "properties": {
                                                "decision": {
                                                    "type": "string"
                                                },
                                                "identifier": {
                                                    "description": "The identifier of the probable infrastructure",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProbableInfrastructureRequestResponseBulk"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "items": {
                                                "properties": {
                                                    "decision": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "identifier": {
                                                        "type": "string"
                                                    },
                                                    "request": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "modify": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "410": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Request data is no longer available"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/search": {
            "get": {
                "description": "Search company inventory",
                "operationId": "companySearch",
                "parameters": [
                    {
                        "description": "Domain to use to search for matching companies",
                        "in": "query",
                        "name": "domain",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Name to use to search for matching companies",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "If set to \"details\", include additional details in each search result. If set to any of the allowed values - or a combination of values - returns only those fields.",
                        "in": "query",
                        "name": "expand",
                        "required": false,
                        "schema": {
                            "enum": [
                                "details",
                                "details.can_unsubscribe",
                                "details.confidence",
                                "details.customer_monitoring_count",
                                "details.employee_count",
                                "details.has_delegated_security_controls",
                                "details.has_company_tree",
                                "details.in_portfolio",
                                "details.is_bundled",
                                "details.is_csp",
                                "details.is_primary",
                                "details.is_service_provider",
                                "details.logo",
                                "details.primary_company",
                                "details.related_csp_entity",
                                "details.self_published",
                                "details.search_history_count",
                                "details.search_token",
                                "details.subscription_type"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by one or more industry names",
                        "in": "query",
                        "name": "industry",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by one or more industry slug names",
                        "in": "query",
                        "name": "industry_slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The scope of the search results.  If \"spm\", only Security Performance Management and Benchmarking companies are returned.",
                        "in": "query",
                        "name": "scope",
                        "required": false,
                        "schema": {
                            "enum": [
                                "spm"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "If True, limit results to only portfolio companies",
                        "in": "query",
                        "name": "in_portfolio",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Return results only for the company guids passed in, ignoring name and domain parameters",
                        "in": "query",
                        "name": "guids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "If True, use database search rather than ElasticSearch",
                        "in": "query",
                        "name": "use_db",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "If True, include non-sellable entities in the results.  Only works when combined with guids parameter.",
                        "in": "query",
                        "name": "include_non_sellable",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "If True, include non-sellable provisional entities in the results.  Only works when combined with guids parameter.",
                        "in": "query",
                        "name": "include_provisional",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "If True, include low confidence entities in the results.  Only works when combined with guids parameter.",
                        "in": "query",
                        "name": "include_low_confidence",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanySearch"
                                }
                            }
                        },
                        "description": "List of company search results"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies"
                ]
            },
            "post": {
                "description": "POSTified search companies",
                "operationId": "companySearchQuery",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "example": {
                                    "guids": [
                                        "76d20f43-8794-4eac-a6f1-29173c9ef475",
                                        "a7a7a725-589f-4fea-9ea9-edc05622fc95"
                                    ]
                                },
                                "properties": {
                                    "domain": {
                                        "description": "Domain(s) to use to search for matching companies",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "expand": {
                                        "description": "If set to \"details\", include additional details in each search result. If set to any of the allowed values - or a combination of values - returns only those fields.",
                                        "enum": [
                                            "details",
                                            "details.confidence",
                                            "details.customer_monitoring_count",
                                            "details.employee_count",
                                            "details.has_delegated_security_controls",
                                            "details.has_company_tree",
                                            "details.in_portfolio",
                                            "details.is_bundled",
                                            "details.is_csp",
                                            "details.is_primary",
                                            "details.is_service_provider",
                                            "details.logo",
                                            "details.primary_company",
                                            "details.related_csp_entity",
                                            "details.self_published",
                                            "details.search_history_count",
                                            "details.search_token"
                                        ],
                                        "type": "string"
                                    },
                                    "guids": {
                                        "description": "Return results only for the company guids passed in, ignoring name and domain parameters",
                                        "items": {
                                            "$ref": "#/x-common-definitions/company_guid"
                                        },
                                        "type": "array"
                                    },
                                    "in_portfolio": {
                                        "description": "If True, limit results to only portfolio companies",
                                        "type": "boolean"
                                    },
                                    "industry": {
                                        "description": "Filter results by one or more industry names",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "industry_slug": {
                                        "description": "Filter results by one or more industry slug names",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "limit": {
                                        "description": "the maximum number of records to return in a response.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "Name to use to search for matching companies",
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "offset": {
                                        "description": "the offset in the result set to start returning records from.  The value 0 will cause the results to start with the first record of the result set.\n",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "scope": {
                                        "description": "The scope of the search results.  If \"spm\", only Security Performance Management and Benchmarking companies are returned.",
                                        "enum": [
                                            "spm"
                                        ],
                                        "type": "string"
                                    },
                                    "use_db": {
                                        "description": "If True, use database search rather than ElasticSearch",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanySearch"
                                }
                            }
                        },
                        "description": "List of company search results"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/trending": {
            "get": {
                "description": "The trending companies",
                "operationId": "companyTrending",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyTrending"
                                }
                            }
                        },
                        "description": "List of trending companies"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/validate-recipient-emails": {
            "post": {
                "description": "Validate Recipient Emails",
                "operationId": "postValidateRecipientEmailsRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "check_deliverability": {
                                        "default": true,
                                        "description": "If True, perform a DNS lookup on the email domain to make sure it is valid.",
                                        "type": "boolean"
                                    },
                                    "email_validations": {
                                        "description": "A list of companies and emails to check that the emails are valid and related to each company.",
                                        "items": {
                                            "example": {
                                                "company_guid": "d004824b-b94b-4b5f-89d0-5a0921890a25",
                                                "email": "test@test.com"
                                            },
                                            "properties": {
                                                "company_guid": {
                                                    "$ref": "#/x-common-definitions/company_guid",
                                                    "description": "Company GUID"
                                                },
                                                "email": {
                                                    "description": "The email address to validate against the company",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "company_guid",
                                                "email"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "exclude_public_provider_domains": {
                                        "default": true,
                                        "description": "If True, check the email domains against a public provider list and mark emails as invalid if the domain is on it.",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "email_validations"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateRecipientEmailResponse"
                                }
                            }
                        },
                        "description": "Email validation successfully completed.  A 200 does not mean that all emails passed in were valid, just that the request was valid."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Contacts"
                ]
            }
        },
        "/companies/{company_guid}/assessments": {
            "post": {
                "description": "Get assessment reports for a given company",
                "operationId": "CompanyAssessmentReports",
                "parameters": [
                    {
                        "description": "The guid of the company that should serve as a base to the assessment reports",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Comma delimmited list of fields to exclude in the response",
                        "in": "query",
                        "name": "exclude_fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "assessment_guids": {
                                        "description": "List of assessment templates guids for which a report should be generated",
                                        "items": {
                                            "$ref": "#/x-common-definitions/guid"
                                        },
                                        "type": "array"
                                    },
                                    "use_license": {
                                        "default": false,
                                        "description": "Confirm that a license can be spent. This only applies if the entity is not in the portfolio.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyAssessmentReport"
                                }
                            }
                        },
                        "description": "The assessment reports were generated."
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Assessments"
                ]
            }
        },
        "/companies/{company_guid}/company-tree/product-types": {
            "get": {
                "description": "Get all product types for the ratings tree of one of your subscribed companies",
                "operationId": "companyTreeProductTypes",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductTypes"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "CompanyTree",
                    "Product Types"
                ]
            }
        },
        "/companies/{company_guid}/company-tree/products": {
            "get": {
                "description": "Get all products for the ratings tree of one of your subscribed companies",
                "operationId": "companyTreeProducts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "CompanyTree",
                    "Products"
                ]
            }
        },
        "/companies/{company_guid}/company-tree/products/{product_guid}/companies": {
            "get": {
                "description": "Get all products for one of your folders",
                "operationId": "companyTreeProductCompanies",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/ProductGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider_Companies"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "CompanyTree",
                    "Products",
                    "Companies"
                ]
            }
        },
        "/companies/{company_guid}/company-tree/providers": {
            "get": {
                "description": "Get all service providers for the ratings tree of one of your subscribed companies",
                "operationId": "companyTreeProviders",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Providers"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "CompanyTree",
                    "Providers"
                ]
            }
        },
        "/companies/{company_guid}/company-tree/providers/breaches": {
            "get": {
                "description": "Get information about breaches of fourth party service providers of companies in the company tree of a specific company\n",
                "operationId": "getCompanyTreeProviderBreaches",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpsBreaches"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "CompanyTree",
                    "Providers",
                    "Breaches"
                ]
            }
        },
        "/companies/{company_guid}/company-tree/providers/breaches/reduced": {
            "get": {
                "description": "Get a lighter response regarding the information about breaches of fourth party service providers of companies in the tree of a specific company. The dependent companies are substituted with a count.\n",
                "operationId": "getCompanyTreeProviderBreachesReduced",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpsBreachesReduced"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "CompanyTree",
                    "Providers",
                    "Breaches"
                ]
            }
        },
        "/companies/{company_guid}/company-tree/providers/breaches/{breach_guid}": {
            "get": {
                "description": "Get information about a specific breach of fourth party service providers of companies in the company tree of a specific company\n",
                "operationId": "getCompanyTreeProviderBreach",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/BreachGuid"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpsBreach"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "CompanyTree",
                    "Providers",
                    "Breaches"
                ]
            }
        },
        "/companies/{company_guid}/company-tree/providers/{provider_guid}/companies": {
            "get": {
                "description": "Get all providers for one of your folders",
                "operationId": "companyTreeProviderCompanies",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/ProviderGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider_Companies"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "CompanyTree",
                    "Providers",
                    "Companies"
                ]
            }
        },
        "/companies/{company_guid}/company-tree/providers/{provider_guid}/products": {
            "get": {
                "description": "Get the products provided a specific provider",
                "operationId": "companyTreeProviderProducts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/ProviderGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    },
                    {
                        "$ref": "#/components/parameters/RelationshipType"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "CompanyTree",
                    "Providers",
                    "Products"
                ]
            }
        },
        "/companies/{company_guid}/diligence/historical-statistics": {
            "get": {
                "description": "Get entity diligence findings counts",
                "operationId": "getDiligenceHistoricalStatistics",
                "parameters": [
                    {
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_type",
                        "in": "query",
                        "name": "risk_type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "application_security",
                                "botnet_infections",
                                "data_breaches",
                                "desktop_software",
                                "dkim",
                                "dnssec",
                                "file_sharing",
                                "insecure_systems",
                                "malware_servers",
                                "mobile_app_publications",
                                "mobile_application_security",
                                "mobile_software",
                                "open_ports",
                                "patching_cadence",
                                "potentially_exploited",
                                "server_software",
                                "spam_propagation",
                                "spf",
                                "ssl_certificates",
                                "ssl_configurations",
                                "unsolicited_comm",
                                "web_appsec"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "lens",
                        "required": false,
                        "schema": {
                            "default": "grade",
                            "enum": [
                                "grade"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "the format of the response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "enum": [
                                "json",
                                "csv"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingsHistoricalCounts"
                                }
                            }
                        },
                        "description": "findings counts"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{company_guid}/domains/{domain_name}/products": {
            "get": {
                "description": "Get the products used on a domain",
                "operationId": "companyDomainProducts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/DomainName"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Domains",
                    "Products"
                ]
            }
        },
        "/companies/{company_guid}/domains/{domain_name}/providers": {
            "get": {
                "description": "Get the providers for products used on a domain",
                "operationId": "companyDomainProviders",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/DomainName"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Providers"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Domains",
                    "Providers"
                ]
            }
        },
        "/companies/{company_guid}/exposed-credentials/credentials": {
            "get": {
                "description": "List exposed credentials for a company",
                "operationId": "listExposedCredentialsCompany",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "description": "Filter by company domain owned by the company_guid.\n",
                        "in": "query",
                        "name": "domain",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by observation date less than.\n",
                        "in": "query",
                        "name": "observation_date_lt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by observation date less than or equals to.\n",
                        "in": "query",
                        "name": "observation_date_lte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by observation date greater than.\n",
                        "in": "query",
                        "name": "observation_date_gt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by observation date greater than or equals to.\n",
                        "in": "query",
                        "name": "observation_date_gte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "account": {
                                                "example": "string",
                                                "type": "string"
                                            },
                                            "breach_date": {
                                                "example": "2025-02-11",
                                                "format": "date",
                                                "type": "string"
                                            },
                                            "breach_name": {
                                                "example": "string",
                                                "type": "string"
                                            },
                                            "observation_date": {
                                                "example": "2025-02-11",
                                                "format": "date",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "example": "observation_date,event_date,breach_name,account\n2024-09-08,2024-09-11,Art of Doubt,john.doe@bitsight.com\n",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK - Returns exposed credentials leaks"
                    },
                    "400": {
                        "$ref": "#/components/schemas/ExposedCredentialsLeak"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "422": {
                        "$ref": "#/components/schemas/ExposedCredentialsLeak"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Exposed Credentials"
                ]
            }
        },
        "/companies/{company_guid}/exposed-credentials/events": {
            "get": {
                "description": "List exposure events (breaches) for a company",
                "operationId": "listExposedCredentialsCompanyExposureEvents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "description": "Filter by event name or impacted domain",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Sortable Fields",
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "enum": [
                                "name",
                                "-name",
                                "observation_date",
                                "-observation_date",
                                "event_date",
                                "-event_date",
                                "record_count",
                                "-record_count"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "description": "The number of results from the query.",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "$ref": "#/components/schemas/PaginationLinks"
                                        },
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/ExposedCredentialsEvent"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK - Returns exposed credentials leaks"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Exposed Credentials"
                ]
            }
        },
        "/companies/{company_guid}/exposed-credentials/events/{event_guid}": {
            "get": {
                "description": "Get the details for a single exposure (breach) event for a company",
                "operationId": "listExposedCredentialsCompanyExposureEventDetail",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "in": "path",
                        "name": "event_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExposedCredentialsEventDetail"
                                }
                            }
                        },
                        "description": "OK - Returns details of the single exposure event"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Exposed Credentials"
                ]
            }
        },
        "/companies/{company_guid}/exposed-credentials/premium/summaries": {
            "get": {
                "description": "Summaries of the exposed credentials detected by the Premium Identity Intelligence product",
                "operationId": "listExposedCredentialsPremiumSummaries",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_for_sale_last_30_days": {
                                            "description": "Number of exposed credentials detected for sale for your company in the last 30 days.",
                                            "type": "integer"
                                        },
                                        "access_for_sale_last_365_days": {
                                            "description": "Number of exposed credentials detected for sale for your company in the last 365 days.",
                                            "type": "integer"
                                        },
                                        "access_for_sale_last_7_days": {
                                            "description": "Number of exposed credentials detected for sale for your company in the last 7 days.",
                                            "type": "integer"
                                        },
                                        "credentials_last_30_days": {
                                            "description": "Number of exposed credentials detected for your company in the last 30 days.",
                                            "type": "integer"
                                        },
                                        "credentials_last_365_days": {
                                            "description": "Number of exposed credentials detected for your company in the last 365 days.",
                                            "type": "integer"
                                        },
                                        "credentials_last_7_days": {
                                            "description": "Number of exposed credentials detected for your company in the last 7 days.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK - Return the summaries of the Premium Identity Intelligence data"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Exposed Credentials"
                ]
            }
        },
        "/companies/{company_guid}/exposed-credentials/summaries": {
            "get": {
                "description": "Summaries of the exposed credentials detected by HIBP",
                "operationId": "listExposedCredentialsSummaries",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "credentials_count": {
                                            "description": "Number of total exposed credentials for your company of all time.",
                                            "type": "integer"
                                        },
                                        "credentials_last_30_days": {
                                            "description": "Number of exposed credentials detected for your company in the last 30 days.",
                                            "type": "integer"
                                        },
                                        "credentials_last_365_days": {
                                            "description": "Number of exposed credentials detected for your company in the last 365 days.",
                                            "type": "integer"
                                        },
                                        "credentials_last_7_days": {
                                            "description": "Number of exposed credentials detected for your company in the last 7 days.",
                                            "type": "integer"
                                        },
                                        "events_count": {
                                            "description": "Number of total breach events for your company of all time.",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK - Return the summaries of the /customer-api/v1/companies/{guid}/events endpoint"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Exposed Credentials"
                ]
            }
        },
        "/companies/{company_guid}/feft/": {
            "post": {
                "description": "Get the remediation timeline for a risk vector given a set of findings and their resolution dates",
                "operationId": "feft_get_rv_feft",
                "parameters": [
                    {
                        "description": "The guid of the company that is being requested",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingResolutionSchedule",
                                "x-body-name": "payload"
                            }
                        }
                    },
                    "description": "Finding resolution schedule",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingResolutionProjection",
                                    "x-body-name": "payload"
                                }
                            }
                        },
                        "description": "OK - return the resolution projection"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "tags": [
                    "Tactical Recovery Plan"
                ]
            }
        },
        "/companies/{company_guid}/feft/{risk_vector}": {
            "post": {
                "description": "Get the remediation timeline for a risk vector given a set of findings and their resolution dates",
                "operationId": "feft_get_rv_feft_old",
                "parameters": [
                    {
                        "description": "The guid of the company that is being requested",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Risk vector to project remediation for",
                        "in": "path",
                        "name": "risk_vector",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FindingResolutionScheduleOld",
                                "x-body-name": "payload"
                            }
                        }
                    },
                    "description": "Finding resolution schedule",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FindingResolutionProjectionOld",
                                    "x-body-name": "payload"
                                }
                            }
                        },
                        "description": "OK - return the resolution projection"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "tags": [
                    "Tactical Recovery Plan"
                ]
            }
        },
        "/companies/{company_guid}/financial-quantifications/enhanced/latest": {
            "get": {
                "description": "Get detailed information about latest successful company's FQ",
                "operationId": "get_latest_financial_quantification",
                "parameters": [
                    {
                        "description": "The guid of the company the FQs are for",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFinancialQuantificationEnhanced"
                                }
                            }
                        },
                        "description": "Successfully returned a specific FQ"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Financial Quantification (Security Performance Management)"
                ]
            }
        },
        "/companies/{company_guid}/findings/statistics": {
            "get": {
                "description": "Get statistics information about the selected company findings",
                "operationId": "getCompanyFindingsStatistics",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Comma delimited list of fields to return. If not specified, all fields are returned.",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of fields to expand.  This requires Infrastructure Analytics",
                        "in": "query",
                        "name": "expand",
                        "required": false,
                        "schema": {
                            "enum": [
                                "first_seen_count",
                                "last_seen_count",
                                "active_count",
                                "resolved_count"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "the format of the response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "enum": [
                                "json",
                                "xml",
                                "csv"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of affects_rating",
                        "in": "query",
                        "name": "affects_rating",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "filter the result by the value of does_not_affect_rating_reason - DELEGATED_ASSET, ASSET_OFFLINE, LIFETIME_EXPIRED, GRACE_PERIOD, GUEST_NETWORK_EXCLUSION, REMEDIATED or AFFECTS_RATING",
                        "in": "query",
                        "name": "impacts_risk_vector_details",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of host",
                        "in": "query",
                        "name": "evidence_key",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of first_seen. This parameter is incompatible with 'first_seen_lt' and 'first_seen_gt.",
                        "in": "query",
                        "name": "first_seen",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being less than given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_lt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being greater than given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_gt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being less than or equal to given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_lte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being greater than or equal to given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_gte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of last_seen. This parameter is incompatible with 'last_seen_lt' and 'last_seen_gt'.",
                        "in": "query",
                        "name": "last_seen",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being less than given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_lt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being greater than given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_gt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being less than or equal to than given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_lte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being greater than or equal to given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_gte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of severity.",
                        "in": "query",
                        "name": "severity",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity less than the given value.",
                        "in": "query",
                        "name": "severity_lt",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity less than or equal to the given value.",
                        "in": "query",
                        "name": "severity_lte",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity greater than the given value.",
                        "in": "query",
                        "name": "severity_gt",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity greater than or equal to the given value.",
                        "in": "query",
                        "name": "severity_gte",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by the severity category.",
                        "in": "query",
                        "name": "severity_category",
                        "required": false,
                        "schema": {
                            "enum": [
                                "severe",
                                "material",
                                "moderate",
                                "minor"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_category.",
                        "in": "query",
                        "name": "risk_category",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Compromised Systems",
                                "Diligence",
                                "User Behavior"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_vector.",
                        "in": "query",
                        "name": "risk_vector",
                        "required": false,
                        "schema": {
                            "enum": [
                                "application_security",
                                "botnet_infections",
                                "data_breaches",
                                "desktop_software",
                                "dkim",
                                "dnssec",
                                "file_sharing",
                                "insecure_systems",
                                "malware_servers",
                                "mobile_app_publications",
                                "mobile_application_security",
                                "mobile_software",
                                "open_ports",
                                "patching_cadence",
                                "potentially_exploited",
                                "server_software",
                                "spam_propagation",
                                "spf",
                                "ssl_certificates",
                                "ssl_configurations",
                                "unsolicited_comm",
                                "web_appsec"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_vector_label.",
                        "in": "query",
                        "name": "risk_vector_label",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Web Application Headers",
                                "Botnet Infections",
                                "Breaches",
                                "Desktop Software",
                                "DKIM",
                                "DNSSEC",
                                "File Sharing",
                                "Insecure Systems",
                                "Malware Servers",
                                "Mobile App Publications",
                                "Mobile Application Security",
                                "Mobile Software",
                                "Open Ports",
                                "Patching Cadence",
                                "Potentially Exploited",
                                "Server Software",
                                "Spam Propagation",
                                "SPF",
                                "SSL Certificates",
                                "SSL Configurations",
                                "Unsolicited Communications",
                                "Web Application Security"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with tags containing given tag list.",
                        "in": "query",
                        "name": "tags_contains",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of grade. This parameter is incompatible with 'grade_lt' and 'grade_gt'.",
                        "in": "query",
                        "name": "details.grade",
                        "required": false,
                        "schema": {
                            "enum": [
                                "NEUTRAL",
                                "BAD",
                                "WARN",
                                "FAIR",
                                "GOOD",
                                "NONE"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with grade being less than given value. The order goes as NEUTRAL < BAD < WARN < FAIR < GOOD This parameter is incompatible with 'grade'.\n",
                        "in": "query",
                        "name": "details.grade_lt",
                        "required": false,
                        "schema": {
                            "enum": [
                                "BAD",
                                "WARN",
                                "FAIR",
                                "GOOD"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with grade being greater than given value. The order goes as NEUTRAL < BAD < WARN < FAIR < GOOD This parameter is incompatible with 'grade'.\n",
                        "in": "query",
                        "name": "details.grade_gt",
                        "required": false,
                        "schema": {
                            "enum": [
                                "NEUTRAL",
                                "BAD",
                                "WARN",
                                "FAIR"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with observed_ips containing given ip address\n",
                        "in": "query",
                        "name": "details.observed_ips_contains",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by one or more infection names",
                        "in": "query",
                        "name": "details.infection.family",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the asset name, either an IP address or a domain.",
                        "in": "query",
                        "name": "assets.asset",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the asset category (critical, high, medium, low).",
                        "in": "query",
                        "name": "assets.category",
                        "required": false,
                        "schema": {
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the hosted_by name.  This filter requires Infrastructure Analytics",
                        "in": "query",
                        "name": "assets.hosted_by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter for findings that have one of the given vulnerabilities present\n",
                        "in": "query",
                        "name": "vulnerabilities",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter for findings that have at least one vulnerability in the given severity category\n",
                        "in": "query",
                        "name": "details.vulnerabilities.severity",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter for findings that have at least one vulnerability with a cvss score bigger than the given cvss\n",
                        "in": "query",
                        "name": "details.cvss.base_gte",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter for findings that have at least one vulnerability with a cvss score smaller than the given cvss\n",
                        "in": "query",
                        "name": "details.cvss.base_lte",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter by the asset category (critical, high, medium, low, none).",
                        "in": "query",
                        "name": "assets.combined_importance",
                        "required": false,
                        "schema": {
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of last_remediation_status_date. This parameter is incompatible with 'last_remediation_status_date_lt' and 'last_remediation_status_date_gt'.",
                        "in": "query",
                        "name": "last_remediation_status_date",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being less than given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_lt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being greater than given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_gt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being less than or equal to than given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_lte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being greater than or equal to given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_gte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of last_remediation_status_label.",
                        "in": "query",
                        "name": "last_remediation_status_label",
                        "required": false,
                        "schema": {
                            "enum": [
                                "No Status",
                                "Open",
                                "To Do",
                                "Work In Progress",
                                "Resolved",
                                "Risk Accepted"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the guids of users assigned to the finding.",
                        "in": "query",
                        "name": "remediation_assignments",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    },
                    {
                        "description": "filter the results by attributed company guids of the finding.",
                        "in": "query",
                        "name": "attributed_companies.guid",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "filter the results by attributed company names of the finding.",
                        "in": "query",
                        "name": "attributed_companies.name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay less than the given value.",
                        "in": "query",
                        "name": "remaining_decay_lt",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay less than or equal to the given value.",
                        "in": "query",
                        "name": "remaining_decay_lte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay greater than the given value.",
                        "in": "query",
                        "name": "remaining_decay_gt",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay greater than or equal to the given value.",
                        "in": "query",
                        "name": "remaining_decay_gte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by duration less than the given value.",
                        "in": "query",
                        "name": "duration_lte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by duration greater than or equal to the given value.",
                        "in": "query",
                        "name": "duration_gte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remediated true or false.",
                        "in": "query",
                        "name": "remediated",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "filter by one or more file sharing categories",
                        "in": "query",
                        "name": "file_sharing_category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the mobile application security findings that pass or fail the tests",
                        "in": "query",
                        "name": "check_pass",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "filter by the assessment name for web application security findings",
                        "in": "query",
                        "name": "details.assessment_name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFindingsStatistics"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{company_guid}/findings/summaries/": {
            "get": {
                "description": "Get summaries information about the selected company findings",
                "operationId": "getCompanyFindingsSummaries",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Comma delimited list of fields to return. If not informed, all fields are returned.",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of affects_rating",
                        "in": "query",
                        "name": "affects_rating",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Comma delimited list of fields to expand. This requires Infrastructure Analytics",
                        "in": "query",
                        "name": "expand",
                        "required": false,
                        "schema": {
                            "enum": [
                                "findings_severity_counts"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFindingsSummaries"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{company_guid}/findings/summary/": {
            "get": {
                "description": "Get FindingsPresentSummary data for a company",
                "operationId": "getCompanyFindingsPresentSummary",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "risk type",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "default": "vulnerability",
                            "type": "string"
                        }
                    },
                    {
                        "description": "risk confidence",
                        "in": "query",
                        "name": "confidence",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "history",
                        "required": false,
                        "schema": {
                            "default": true,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFindingsPresentSummary"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{company_guid}/findings/{risk_type}/eol-grade-changes": {
            "get": {
                "description": "Get oel grade changes for desktop or mobile software",
                "operationId": "getCompanyFindingsDesktopSoftwareEOL",
                "parameters": [
                    {
                        "description": "guid of the company",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "the type of device",
                        "in": "path",
                        "name": "risk_type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "desktop-software",
                                "mobile-software"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "the type of product",
                        "in": "query",
                        "name": "product_type",
                        "schema": {
                            "enum": [
                                "browser",
                                "os"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DesktopMobileSoftwareGradeChanges"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{company_guid}/findings/{rolledup_observation_id}/history-timeline": {
            "get": {
                "description": "Get a timeline of findings, rescans, comments, and issue-tracking events for a company for a specific finding based on a rolledup_observation_id",
                "operationId": "getCompanyFindingsHistoryTimeline",
                "parameters": [
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The rolledup_observation_id of the finding",
                        "in": "path",
                        "name": "rolledup_observation_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter timeline by event type (finding, rescan, comment, issue-tracking)",
                        "in": "query",
                        "name": "type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "type": "integer"
                                        },
                                        "results": {
                                            "items": {
                                                "properties": {
                                                    "datetime": {
                                                        "description": "The datetime of the event",
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "details": {
                                                        "description": "Event-specific details",
                                                        "type": "object"
                                                    },
                                                    "type": {
                                                        "description": "The type of timeline event (finding, rescan, comment, issue-tracking)",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{company_guid}/fourth-parties": {
            "get": {
                "description": "Get all service providers and products associated with the specified company",
                "operationId": "companyFourthPartiesGet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    },
                    {
                        "$ref": "#/components/parameters/RelationshipType"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FourthPartyRelationships"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Providers",
                    "Products",
                    "Self-Published"
                ]
            },
            "post": {
                "description": "Create a new relationship between the specified company and a new product or service provider\n",
                "operationId": "companyFourthPartiesPost",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "body": {
                                        "description": "provide either a product_guid or a provider_guid.  Providing a product_guid creates a transitive relationship to the product's service provider\n",
                                        "example": {
                                            "product_guid": "123-456-789"
                                        },
                                        "properties": {
                                            "product_guid": {
                                                "description": "the GUID of the product to associate with this company",
                                                "type": "string"
                                            },
                                            "provider_guid": {
                                                "description": "the GUID of the service provider to associate with this company",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "body"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FourthPartyRelationship"
                                }
                            }
                        },
                        "description": "Relationship already existed"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FourthPartyRelationship"
                                }
                            }
                        },
                        "description": "Relationship created successfully"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "You do not have sufficient privileges in the system to create a new self-published relationship\n"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Either the company the relationship is for or the product/provider the relationship targets does not exist, or the company the relationship is for is not currently subscribed in the Bitsight platform\n"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "You attempted to create a self-published relationship when Bitsight already manages the same relationship automatically\n"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Providers",
                    "Products",
                    "Self-Published"
                ]
            }
        },
        "/companies/{company_guid}/fourth-parties/{fourth_party_guid}": {
            "delete": {
                "description": "Delete a self-published fourth party relationship",
                "operationId": "companyFourthPartyDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/FourthPartyGuid"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FourthPartyRelationship"
                                }
                            }
                        },
                        "description": "Deletion succeeded"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "You tried to delete a Bitsight-created fourth party relationship or you do not have sufficient privileges in the system to delete a self-published relationship\n"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "There was no custom relationship with the specified GUID for the given company, or the given company is not currently subscribed in the Bitsight platform\n"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Providers",
                    "Products",
                    "Self-Published"
                ]
            },
            "get": {
                "description": "Show information about a specific fourth party relationship",
                "operationId": "companyFourthPartyGet",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/FourthPartyGuid"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FourthPartyRelationship"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "There was no custom relationship with the specified GUID for the given company, or the given company is not currently subscribed in the Bitsight platform\n"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Providers",
                    "Products",
                    "Self-Published"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/dashboard/": {
            "get": {
                "description": "Get the dashboard counts for the company.",
                "operationId": "peer_analytics.dashboard",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupSubIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingGte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingLte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupEmployeeSize"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupServiceSize"
                    },
                    {
                        "$ref": "#/components/parameters/RisksDashboard"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeerAnalyticsDashboard"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/graph-data/compromised-systems/": {
            "get": {
                "description": "Get compromised-systems event counts for the company.",
                "operationId": "peer_analytics.graph_data.compromised_systems",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupSubIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingGte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingLte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupEmployeeSize"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupServiceSize"
                    },
                    {
                        "$ref": "#/components/parameters/RiskTypesCompromisedSystems"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeerAnalyticsCompromisedSystemsGraphData"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/peer-group/count/": {
            "get": {
                "description": "Get the peer group information.",
                "operationId": "peer_analytics.peer_group.count",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupSubIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingGte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingLte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupServiceSize"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupEmployeeSize"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupType"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeerAnalyticsPeerGroupCount"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/ratings-distribution/": {
            "get": {
                "description": "Get the ratings distribution data for the company.",
                "operationId": "peer_analytics.distribution",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupSubIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingGte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingLte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupEmployeeSize"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupServiceSize"
                    },
                    {
                        "$ref": "#/components/parameters/RiskTypes"
                    },
                    {
                        "description": "If True, limit results to 100 recommended peers.  Also ignore other parameters and allow to be called for any portfolio company.",
                        "in": "query",
                        "name": "recommended_peers_only",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeerAnalyticsRatingsDistribution"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/recommended-peers": {
            "get": {
                "description": "Compute a set of recommended peers.",
                "operationId": "peer_analytics.recommended_peers",
                "parameters": [
                    {
                        "description": "Include additional fields in the response.  Currently supports breaches_past_year.",
                        "in": "query",
                        "name": "include",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/PeerDetailEntry"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "The recommended peers"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/reports/diligence": {
            "get": {
                "description": "Get the diligence report for the company.",
                "operationId": "peer_analytics.diligence_report",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupSubIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingGte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingLte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupEmployeeSize"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupServiceSize"
                    },
                    {
                        "$ref": "#/components/parameters/RiskTypesDiligence"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Unprocessable"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/reports/peer-group-company-names": {
            "post": {
                "description": "CSV for peer group company names and subscription status.",
                "operationId": "peer_analytics.peer_group_company_names",
                "parameters": [
                    {
                        "description": "The guid of the report to share.",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "peer_group_config": {
                                        "$ref": "#/components/schemas/PeerGroupSummaryArgs"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Unprocessable"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/statistics/compromised-systems/": {
            "get": {
                "description": "Get compromised-systems statistics data for the company.",
                "operationId": "peer_analytics.statistics.compromised_systems",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupSubIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingGte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingLte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupEmployeeSize"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupServiceSize"
                    },
                    {
                        "$ref": "#/components/parameters/RiskTypesCompromisedSystems"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeerAnalyticsCompromisedSystemsStatistics"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/statistics/diligence": {
            "get": {
                "description": "Get the diligence counts for the company.",
                "operationId": "peer_analytics.diligence_statistics",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupSubIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingGte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingLte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupEmployeeSize"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupServiceSize"
                    },
                    {
                        "$ref": "#/components/parameters/RiskTypesDiligence"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeerAnalyticsDiligenceStatistics"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/peer-analytics/statistics/user-behavior/": {
            "get": {
                "description": "Get the user-behavior counts for the company.",
                "operationId": "peer_analytics.user_behavior_statistics",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupSubIndustrySlugs"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingGte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupRatingLte"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupEmployeeSize"
                    },
                    {
                        "$ref": "#/components/parameters/PeerGroupServiceSize"
                    },
                    {
                        "$ref": "#/components/parameters/RiskTypesUserBehavior"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeerAnalyticsUserBehaviorStatistics"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Peer Analytics"
                ]
            }
        },
        "/companies/{company_guid}/products": {
            "get": {
                "description": "Get the products used on all domains",
                "operationId": "companyProducts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Products"
                ]
            },
            "post": {
                "description": "Get the products used on all domains (POST)",
                "operationId": "companyProductsPost",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "example": {
                                "limit": 3,
                                "product_guid": [
                                    "product_guid_1",
                                    "product_guid_2"
                                ],
                                "product_types": [
                                    "product_type_1"
                                ],
                                "provider_guid": [
                                    "provider_guid_1"
                                ],
                                "provider_name": [
                                    "provider_name_1"
                                ],
                                "q": "acme",
                                "relationship_source": [
                                    "relationship_source_1"
                                ],
                                "relative_criticality": [
                                    "low",
                                    "medium",
                                    "high",
                                    "critical"
                                ]
                            },
                            "schema": {
                                "$ref": "#/components/schemas/PaginationBody"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Products"
                ]
            }
        },
        "/companies/{company_guid}/products/{product_guid}/domains": {
            "get": {
                "description": "Get the domains for a product and company pair",
                "operationId": "companyProductDomains",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/ProductGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Domain"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Providers",
                    "Domains"
                ]
            }
        },
        "/companies/{company_guid}/providers": {
            "get": {
                "description": "Get the providers for products used on all domains",
                "operationId": "companyProviders",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Providers"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Providers"
                ]
            }
        },
        "/companies/{company_guid}/providers/breaches": {
            "get": {
                "description": "Get information about breaches of a specific company\n",
                "operationId": "getCompanyProviderBreaches",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpsBreaches"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Providers",
                    "Breaches"
                ]
            }
        },
        "/companies/{company_guid}/providers/breaches/{breach_guid}": {
            "get": {
                "description": "Get information about breaches of a specific company\n",
                "operationId": "getCompanyProviderBreach",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/BreachGuid"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpsBreach"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Providers",
                    "Breaches"
                ]
            }
        },
        "/companies/{company_guid}/providers/{provider_guid}/domains": {
            "get": {
                "description": "Get the domains for a provider and company pair",
                "operationId": "companyProviderDomains",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CompanyGuid"
                    },
                    {
                        "$ref": "#/components/parameters/ProviderGuid"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Provider_Domains"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies",
                    "Providers",
                    "Domains"
                ]
            }
        },
        "/companies/{company_guid}/self-published-requests": {
            "post": {
                "description": "Request to create self published entity",
                "operationId": "getSelfPublishedRequests",
                "parameters": [
                    {
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "body": {
                                        "$ref": "#/components/schemas/SelfPublishedRequestBody"
                                    }
                                },
                                "required": [
                                    "body"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SelfPublishedRequest"
                                }
                            }
                        },
                        "description": "findings counts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{company_guid}/tactical-recovery-plans/": {
            "get": {
                "description": "List all the Tactical Recovery Plans exist for this company_guid",
                "operationId": "list_tactical_recovery_plans",
                "parameters": [
                    {
                        "description": "The guid of the company that is being requested",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/TacticalRecoveryPlanMetaData"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK - Returned the List of TRP Metadata"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "tags": [
                    "Tactical Recovery Plan"
                ]
            },
            "post": {
                "description": "Create a Tactical Recovery Plan report",
                "operationId": "create_tactical_recovery_plan",
                "parameters": [
                    {
                        "description": "The guid of the company that is being requested",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TacticalRecoveryRequestBody",
                                "x-body-name": "payload"
                            }
                        }
                    },
                    "description": "The details of the creation of the TRP report",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/TacticalRecoveryPlanMetaData"
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Created - Tactical Recovery Plan created"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "tags": [
                    "Tactical Recovery Plan"
                ]
            }
        },
        "/companies/{company_guid}/tactical-recovery-plans/latest/{risk_vector}": {
            "get": {
                "description": "Get the CSV of the latest tactical recovery plan report of the company",
                "operationId": "get_latest_tactical_recovery_plan",
                "parameters": [
                    {
                        "description": "The guid of the company that is being requested",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The risk vector of the Tactical Recovery Plan report that is being requested",
                        "in": "path",
                        "name": "risk_vector",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK - Returned the contents of the Tactical Recovery Plan as a CSV file"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "tags": [
                    "Tactical Recovery Plan"
                ]
            }
        },
        "/companies/{company_guid}/tactical-recovery-plans/{trp_guid}": {
            "get": {
                "description": "Get the CSV of the tactical recovery plan report with the trp_guid",
                "operationId": "get_tactical_recovery_plan",
                "parameters": [
                    {
                        "description": "The guid of the company that is being requested",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The guid Tactical Recovery Plan report that is being requested",
                        "in": "path",
                        "name": "trp_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK - Returned the contents of the Tactical Recovery Plan as a CSV file"
                    },
                    "204": {
                        "description": "Company or Tactical Recovery Plan not found"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    }
                },
                "tags": [
                    "Tactical Recovery Plan"
                ]
            }
        },
        "/companies/{company_guid}/underwriting-guidelines": {
            "get": {
                "description": "Compares the company's risk vector grades with the underwriting guidelines",
                "operationId": "getCompanyUnderwritingGuidelines",
                "parameters": [
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "company_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "failed": {
                                            "description": "The list of risk vectors that failed",
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyUnderwritingGuidelines"
                                            },
                                            "type": "array"
                                        },
                                        "passed": {
                                            "description": "The list of risk vectors that passed",
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyUnderwritingGuidelines"
                                            },
                                            "type": "array"
                                        },
                                        "risk_vector_count": {
                                            "description": "The total number of risk vectors compared",
                                            "type": "integer"
                                        },
                                        "threat_groups_count": {
                                            "description": "The total number of threat groups compared",
                                            "type": "integer"
                                        },
                                        "threat_groups_detected": {
                                            "description": "The list of threat groups detected",
                                            "items": {
                                                "$ref": "#/components/schemas/ThreatUnderwritingGuidelines"
                                            },
                                            "type": "array"
                                        },
                                        "threat_groups_detected_count": {
                                            "description": "The total number of threat groups detected",
                                            "type": "integer"
                                        },
                                        "threats_count": {
                                            "description": "The total number of threats compared",
                                            "type": "integer"
                                        },
                                        "threats_detected": {
                                            "description": "The list of threats detected",
                                            "items": {
                                                "$ref": "#/components/schemas/ThreatUnderwritingGuidelines"
                                            },
                                            "type": "array"
                                        },
                                        "threats_detected_count": {
                                            "description": "The total number of threats detected",
                                            "type": "integer"
                                        },
                                        "ungraded": {
                                            "description": "The list of ungraded risk vectors",
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyUnderwritingGuidelines"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Underwriting Guidelines"
                ]
            }
        },
        "/companies/{guid}": {
            "get": {
                "description": "Get organization details by guid",
                "operationId": "getCompany",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of company fields to return",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Boolean indicating if unrestricted fields should be returned if the user doesn't have access to view all company details. If the user has access to view all company details the full company will be returned\n",
                        "in": "query",
                        "name": "include_unrestricted",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            },
            "patch": {
                "description": "Update a Company's primary company and its custom ID.\nIf any of them is null, then the corresponding property would be deleted\n",
                "operationId": "updateCompany",
                "parameters": [
                    {
                        "description": "GUID of the Company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "contents": {
                                        "$ref": "#/components/schemas/Edit_Company"
                                    }
                                },
                                "required": [
                                    "contents"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        },
                        "description": "OK - Returns updated 'Company'"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/assets": {
            "get": {
                "description": "Get all assets for a company",
                "operationId": "getCompanyAssets",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "enum": [
                                "json",
                                "xml",
                                "csv"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of fields to return in each result",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by asset name",
                        "in": "query",
                        "name": "asset",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by asset identifier, currently only used for mobile application assets.",
                        "in": "query",
                        "name": "identifier",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by IP address",
                        "in": "query",
                        "name": "ip_address",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of importance categories",
                        "in": "query",
                        "name": "importance_categories",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of 2-letter country codes.  This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "country_codes",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of country names.  This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "countries",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "If True, only return assets that are IP addresses.  If False, only return Domain-based assets.",
                        "in": "query",
                        "name": "is_ip",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of hosting provider company guids.  This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "hosted_by.guid",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by whether or not the asset has an associated hosting provider",
                        "in": "query",
                        "name": "hosted_by_isnull",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of origin subsidiary guids.  This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "origin_subsidiary.guid",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by whether or not the asset is attributed to a subsidiary",
                        "in": "query",
                        "name": "origin_subsidiary_isnull",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of service names.  This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "services",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of importance overrides",
                        "in": "query",
                        "name": "importance_overrides",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of importance combined overrides",
                        "in": "query",
                        "name": "combined_overrides.importance",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "If True, return assets which are not overridden, otherwise return assets which are overridden",
                        "in": "query",
                        "name": "overrides_isnull",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of the vendors of identified products. This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "product.vendor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of support status strings. This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "product.support",
                        "required": false,
                        "schema": {
                            "enum": [
                                "current-version",
                                "current-package",
                                "obsolete-package",
                                "obsolete-version",
                                "obsolete-os-release",
                                "unknown-patch-status",
                                "possible-backports",
                                "incomplete-version",
                                "unknown"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of strings in the form product_name:product_version. Version can be null to get unspecified versions or empty to get all versions. This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "product.name-version",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of threat guids. This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "threat.guid",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of threat severity levels. This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "threat.severity_level",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by a comma-separated list of threat evidence certainties. This filter requires Infrastructure Analytics.",
                        "in": "query",
                        "name": "threat.evidence_certainty",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter the result with findings' total count being the given value.",
                        "in": "query",
                        "name": "findings.total_count",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter the result with findings' total count being less than given value.",
                        "in": "query",
                        "name": "findings.total_count_lt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter the result with findings' total count being greater than given value.",
                        "in": "query",
                        "name": "findings.total_count_gt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter the result with findings' total count being less than or equal to than given value.",
                        "in": "query",
                        "name": "findings.total_count_lte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter the result with findings' total count being greater than or equal to given value.",
                        "in": "query",
                        "name": "findings.total_count_gte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "If True, return only monitored assets, otherwise return all assets.",
                        "in": "query",
                        "name": "is_monitored",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filter results by the value of grace_period_end_date.",
                        "in": "query",
                        "name": "grace_period_end_date",
                        "required": false,
                        "schema": {
                            "example": "2024-12-01",
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results with grace_period_end_date less than the given value.",
                        "in": "query",
                        "name": "grace_period_end_date_lt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results with grace_period_end_date less than or equal to the given value.",
                        "in": "query",
                        "name": "grace_period_end_date_lte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results with grace_period_end_date greater than the given value.",
                        "in": "query",
                        "name": "grace_period_end_date_gt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results with grace_period_end_date greater than or equal to than the given value.",
                        "in": "query",
                        "name": "grace_period_end_date_gte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by the value of guest_network_end_date.",
                        "in": "query",
                        "name": "guest_network_end_date",
                        "required": false,
                        "schema": {
                            "example": "2024-12-01",
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results with guest_network_end_date less than the given value.",
                        "in": "query",
                        "name": "guest_network_end_date_lt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results with guest_network_end_date less than or equal to the given value.",
                        "in": "query",
                        "name": "guest_network_end_date_lte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results with guest_network_end_date greater than the given value.",
                        "in": "query",
                        "name": "guest_network_end_date_gt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results with guest_network_end_date greater than or equal to than the given value.",
                        "in": "query",
                        "name": "guest_network_end_date_gte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by if asset is in grace period or not.",
                        "in": "query",
                        "name": "is_in_grace_period",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filter results by if asset is in guest network or not.",
                        "in": "query",
                        "name": "is_in_guest_network",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "A comma separated list of fields to expand.",
                        "in": "query",
                        "name": "expand",
                        "required": false,
                        "schema": {
                            "enum": [
                                "tag_details"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "$ref": "#/x-common-definitions/paginated_result"
                                        },
                                        {
                                            "properties": {
                                                "items": {
                                                    "items": {
                                                        "$ref": "#/components/schemas/Asset"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Assets"
                ]
            }
        },
        "/companies/{guid}/assets/overrides": {
            "delete": {
                "description": "Delete Overrides on Assets.",
                "operationId": "deleteOverrides",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "assets": {
                                        "$ref": "#/components/schemas/CompanyAssetOverride"
                                    }
                                },
                                "required": [
                                    "assets"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "The Overrides were successfully deleted"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Assets"
                ]
            },
            "get": {
                "description": "Get asset overrides for an asset",
                "operationId": "getAssetsOverride",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "enum": [
                                "json",
                                "xml",
                                "csv"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter results by asset name",
                        "in": "query",
                        "name": "asset",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetOverride"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Assets"
                ]
            },
            "post": {
                "description": "Add an asset override",
                "operationId": "createAssetsOverride",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "assets": {
                                        "$ref": "#/components/schemas/CompanyAssetOverride"
                                    }
                                },
                                "required": [
                                    "assets"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetOverride"
                                }
                            }
                        },
                        "description": "Overrides are successfully applied on the assets"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Assets"
                ]
            }
        },
        "/companies/{guid}/assets/statistics": {
            "get": {
                "description": "Get asset statistics for a company",
                "operationId": "getCompaniesAssetStatistics",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Grades of findings to include",
                        "in": "query",
                        "name": "grade",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Remediation statuses of findings to include",
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetStatistics"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/assets/summaries": {
            "get": {
                "description": "Get summarized asset data for a company.",
                "operationId": "getCompaniesAssetSummaries",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssetSummaries"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Assets"
                ]
            }
        },
        "/companies/{guid}/assets/tags": {
            "patch": {
                "description": "Set the asset(s) tag(s)",
                "parameters": [
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/AssetTags"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AssetTagsResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation, or unsuccessful operation with known reasons"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Assets"
                ]
            }
        },
        "/companies/{guid}/bundle": {
            "get": {
                "description": "Get a list of companies that are bundled with this company",
                "operationId": "getCompaniesBundle",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    },
                    {
                        "description": "indicate whether to only include public entities",
                        "in": "query",
                        "name": "public_only",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Company_Bundle"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/company-tree": {
            "get": {
                "description": "Get the ratings tree",
                "operationId": "getCompaniesTree",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Includes additional information",
                        "in": "query",
                        "name": "expand",
                        "required": false,
                        "schema": {
                            "enum": [
                                "is_shell",
                                "confidence"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company_Tree"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "CompanyTree"
                ]
            }
        },
        "/companies/{guid}/company-tree/countries": {
            "get": {
                "description": "Get the ratings tree countries",
                "operationId": "getCompanyTreeCountries",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company_Tree_Countries"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "CompanyTree"
                ]
            }
        },
        "/companies/{guid}/company-tree/guids": {
            "get": {
                "description": "Get the guids in a ratings tree",
                "operationId": "getCompaniesTreeGuids",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Filter by one or more company names, separated by a comma",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by one or more domain names, separated by a comma",
                        "in": "query",
                        "name": "domain",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by one or more IP addresses (v4 or v6), separated by a comma",
                        "in": "query",
                        "name": "ip",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by name, domain, or ip using term provided",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "CompanyTree"
                ]
            }
        },
        "/companies/{guid}/compliance-claim": {
            "delete": {
                "description": "Delete the company's compliance claim",
                "operationId": "deleteCompanyComplianceClaim",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Compliance claim successfully deleted"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Compliance Claim"
                ]
            },
            "get": {
                "description": "Get company's compliance claim",
                "operationId": "getCompanyComplianceClaim",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyComplianceClaim"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Compliance Claim"
                ]
            },
            "post": {
                "description": "Create or replace the company's compliance claim",
                "operationId": "postCompanyComplianceClaim",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "certifications": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "trust_page": {
                                        "description": "URL of the company trust page",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyComplianceClaim"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData",
                        "description": "Bad request"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Compliance Claim"
                ]
            }
        },
        "/companies/{guid}/compliance-claim/validate-link": {
            "post": {
                "description": "Post endpoint to validate a link to be a trust page in a compliance claim.",
                "operationId": "complianceClaimValidateLink",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "link": {
                                        "description": "the link to validate",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "link"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reason": {
                                            "description": "reason if validation failed",
                                            "type": "string"
                                        },
                                        "result": {
                                            "description": "result of validation",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK - Returns status of validation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Compliance Claim"
                ]
            }
        },
        "/companies/{guid}/countries": {
            "get": {
                "description": "Get IP count of an organization by country",
                "operationId": "getCompaniesCountries",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IP_Statistics"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/data-privacy-report": {
            "get": {
                "description": "Check if the company's data privacy report is available",
                "operationId": "getCompanyDataPrivacyReport",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "last_modified": {
                                            "description": "Last modified datetime",
                                            "format": "datetime",
                                            "type": "string"
                                        },
                                        "report_available": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Data privacy report found"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "description": "Data privacy report not found"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/data-privacy-report/download": {
            "get": {
                "description": "Get the company's data privacy report",
                "operationId": "getCompanyDataPrivacyReportDownload",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Data privacy report downloaded successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/diligence/statistics": {
            "get": {
                "description": "Get diligence statistics of an organization",
                "operationId": "getCompaniesDiligenceStatistics",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Risk_Vector_Grade_Count"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Unprocessable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/financial-quantifications/enhanced": {
            "get": {
                "description": "Get Customer Financial Quantifications Enhanced (SPM)",
                "operationId": "getCustomerFinancialQuantificationsEnhanced",
                "parameters": [
                    {
                        "description": "The guid of the company the FQs are for",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "description": "The total number of results",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "description": "A set of links to traverse the result set",
                                            "properties": {
                                                "next": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "next_args": {
                                                    "description": "query parameters to fetch the next page",
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "previous": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "previous_args": {
                                                    "description": "query parameters to fetch the previous page",
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyFinancialQuantificationEnhanced"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successfully returned a list of FQs"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Financial Quantification (Security Performance Management)"
                ]
            },
            "post": {
                "description": "Create Customer Financial Quantifications Enhanced (SPM)",
                "operationId": "postCustomerFinancialQuantificationsEnhanced",
                "parameters": [
                    {
                        "description": "The guid of the company the FQs are for",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FinancialQuantificationEnhancedArgs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFinancialQuantificationEnhanced"
                                }
                            }
                        },
                        "description": "Successfully created FQ"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Financial Quantification (Security Performance Management)"
                ]
            },
            "put": {
                "description": "Update Customer Financial Quantifications Enhanced (SPM)",
                "operationId": "update_financial_quantification",
                "parameters": [
                    {
                        "description": "The guid of the company the FQs are for",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyFinancialQuantificationEnhanced"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFinancialQuantificationEnhanced"
                                }
                            }
                        },
                        "description": "Successfully updated FQ draft for given company guid"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Financial Quantification (Security Performance Management)"
                ]
            }
        },
        "/companies/{guid}/financial-quantifications/enhanced/{fq_guid}": {
            "get": {
                "description": "Get detailed information about a specific company's FQ",
                "operationId": "getSingleFinancialQuantificationEnhanced",
                "parameters": [
                    {
                        "description": "The guid of the company the FQs are for",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The guid of the specific FQ",
                        "in": "path",
                        "name": "fq_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFinancialQuantificationEnhanced"
                                }
                            }
                        },
                        "description": "Successfully returned a specific FQ"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Financial Quantification (Security Performance Management)"
                ]
            },
            "patch": {
                "description": "Cancel a pending Financial Quantification",
                "operationId": "cancelFinancialQuantificationEnhancedByGuid",
                "parameters": [
                    {
                        "description": "Company guid",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The guid of the specific FQ",
                        "in": "path",
                        "name": "fq_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFinancialQuantificationEnhanced"
                                }
                            }
                        },
                        "description": "Successfully returned the canceled FQ"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Financial Quantification (Security Performance Management)"
                ]
            }
        },
        "/companies/{guid}/findings": {
            "get": {
                "description": "Get findings data for given company",
                "operationId": "getCompaniesFindings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    },
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "the format of the response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "enum": [
                                "json",
                                "xml",
                                "csv"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of affects_rating",
                        "in": "query",
                        "name": "affects_rating",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "filter the result by the value of does_not_affect_rating_reason - DELEGATED_ASSET, ASSET_OFFLINE, LIFETIME_EXPIRED, GRACE_PERIOD, GUEST_NETWORK_EXCLUSION, REMEDIATED or AFFECTS_RATING",
                        "in": "query",
                        "name": "impacts_risk_vector_details",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of host",
                        "in": "query",
                        "name": "evidence_key",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of first_seen. This parameter is incompatible with 'first_seen_lt' and 'first_seen_gt.",
                        "in": "query",
                        "name": "first_seen",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being less than given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_lt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being greater than given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_gt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being less than or equal to given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_lte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being greater than or equal to given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_gte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of last_seen. This parameter is incompatible with 'last_seen_lt' and 'last_seen_gt'.",
                        "in": "query",
                        "name": "last_seen",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being less than given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_lt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being greater than given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_gt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being less than or equal to than given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_lte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being greater than or equal to given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_gte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with grace_period_end_date being less than or equal to than given value.",
                        "in": "query",
                        "name": "grace_period_end_date_lte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with grace_period_end_date being greater than or equal to given value.",
                        "in": "query",
                        "name": "grace_period_end_date_gte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with guest_network_end_date being less than or equal to than given value.",
                        "in": "query",
                        "name": "guest_network_end_date_lte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with guest_network_end_date being greater than or equal to given value.",
                        "in": "query",
                        "name": "guest_network_end_date_gte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of severity.",
                        "in": "query",
                        "name": "severity",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity less than the given value.",
                        "in": "query",
                        "name": "severity_lt",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity less than or equal to the given value.",
                        "in": "query",
                        "name": "severity_lte",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity greater than the given value.",
                        "in": "query",
                        "name": "severity_gt",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity greater than or equal to the given value.",
                        "in": "query",
                        "name": "severity_gte",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by the severity category.",
                        "in": "query",
                        "name": "severity_category",
                        "required": false,
                        "schema": {
                            "enum": [
                                "severe",
                                "material",
                                "moderate",
                                "minor"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_category.",
                        "in": "query",
                        "name": "risk_category",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Compromised Systems",
                                "Diligence",
                                "User Behavior"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_vector.",
                        "in": "query",
                        "name": "risk_vector",
                        "required": false,
                        "schema": {
                            "enum": [
                                "application_security",
                                "botnet_infections",
                                "data_breaches",
                                "desktop_software",
                                "dkim",
                                "dnssec",
                                "file_sharing",
                                "insecure_systems",
                                "malware_servers",
                                "mobile_app_publications",
                                "mobile_application_security",
                                "mobile_software",
                                "open_ports",
                                "patching_cadence",
                                "potentially_exploited",
                                "server_software",
                                "spam_propagation",
                                "spf",
                                "ssl_certificates",
                                "ssl_configurations",
                                "unsolicited_comm",
                                "web_appsec"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_vector_label.",
                        "in": "query",
                        "name": "risk_vector_label",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Web Application Headers",
                                "Botnet Infections",
                                "Breaches",
                                "Desktop Software",
                                "DKIM",
                                "DNSSEC",
                                "File Sharing",
                                "Insecure Systems",
                                "Malware Servers",
                                "Mobile App Publications",
                                "Mobile Application Security",
                                "Mobile Software",
                                "Open Ports",
                                "Patching Cadence",
                                "Potentially Exploited",
                                "Server Software",
                                "Spam Propagation",
                                "SPF",
                                "SSL Certificates",
                                "SSL Configurations",
                                "Unsolicited Communications",
                                "Web Application Security"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with tags containing given tag list.",
                        "in": "query",
                        "name": "tags_contains",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of grade. This parameter is incompatible with 'grade_lt' and 'grade_gt'.",
                        "in": "query",
                        "name": "details.grade",
                        "required": false,
                        "schema": {
                            "enum": [
                                "NEUTRAL",
                                "BAD",
                                "WARN",
                                "FAIR",
                                "GOOD",
                                "NONE"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with grade being less than given value. The order goes as NEUTRAL < BAD < WARN < FAIR < GOOD This parameter is incompatible with 'grade'.\n",
                        "in": "query",
                        "name": "details.grade_lt",
                        "required": false,
                        "schema": {
                            "enum": [
                                "BAD",
                                "WARN",
                                "FAIR",
                                "GOOD"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with grade being greater than given value. The order goes as NEUTRAL < BAD < WARN < FAIR < GOOD This parameter is incompatible with 'grade'.\n",
                        "in": "query",
                        "name": "details.grade_gt",
                        "required": false,
                        "schema": {
                            "enum": [
                                "NEUTRAL",
                                "BAD",
                                "WARN",
                                "FAIR"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with observed_ips containing given ip address\n",
                        "in": "query",
                        "name": "details.observed_ips_contains",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by one or more infection names",
                        "in": "query",
                        "name": "details.infection.family",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the asset name, either an IP address or a domain.",
                        "in": "query",
                        "name": "assets.asset",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the asset category (critical, high, medium, low).",
                        "in": "query",
                        "name": "assets.category",
                        "required": false,
                        "schema": {
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the hosted_by name.",
                        "in": "query",
                        "name": "assets.hosted_by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "If True, return only findings for monitored assets, otherwise return findings for all assets.",
                        "in": "query",
                        "name": "assets.is_monitored",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "filter for findings that have one of the given vulnerabilities present\n",
                        "in": "query",
                        "name": "vulnerabilities",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter for findings that have at least one vulnerability in the given severity category\n",
                        "in": "query",
                        "name": "details.vulnerabilities.severity",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter for findings that have at least one vulnerability with a cvss score bigger than the given cvss\n",
                        "in": "query",
                        "name": "details.cvss.base_gte",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter for findings that have at least one vulnerability with a cvss score smaller than the given cvss\n",
                        "in": "query",
                        "name": "details.cvss.base_lte",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter by the asset category (critical, high, medium, low, none).",
                        "in": "query",
                        "name": "assets.combined_importance",
                        "required": false,
                        "schema": {
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "If expand=remediation_history is set, include remediation info.",
                        "in": "query",
                        "name": "expand",
                        "required": false,
                        "schema": {
                            "enum": [
                                "remediation_history",
                                "tag_details"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of last_remediation_status_date. This parameter is incompatible with 'last_remediation_status_date_lt' and 'last_remediation_status_date_gt'.",
                        "in": "query",
                        "name": "last_remediation_status_date",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being less than given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_lt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being greater than given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_gt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being less than or equal to than given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_lte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being greater than or equal to given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_gte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of last_remediation_status_label.",
                        "in": "query",
                        "name": "last_remediation_status_label",
                        "required": false,
                        "schema": {
                            "enum": [
                                "No Status",
                                "Open",
                                "To Do",
                                "Work In Progress",
                                "Resolved",
                                "Risk Accepted"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the guids of users assigned to the finding.",
                        "in": "query",
                        "name": "remediation_assignments",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    },
                    {
                        "description": "filter the results by attributed company guids of the finding.",
                        "in": "query",
                        "name": "attributed_companies.guid",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "filter the results by attributed company names of the finding.",
                        "in": "query",
                        "name": "attributed_companies.name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay less than the given value.",
                        "in": "query",
                        "name": "remaining_decay_lt",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay less than or equal to the given value.",
                        "in": "query",
                        "name": "remaining_decay_lte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay greater than the given value.",
                        "in": "query",
                        "name": "remaining_decay_gt",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay greater than or equal to the given value.",
                        "in": "query",
                        "name": "remaining_decay_gte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by duration less than the given value.",
                        "in": "query",
                        "name": "duration_lte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by duration greater than or equal to the given value.",
                        "in": "query",
                        "name": "duration_gte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remediated true or false.",
                        "in": "query",
                        "name": "remediated",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "filter by one or more file sharing categories",
                        "in": "query",
                        "name": "file_sharing_category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the mobile application security findings that pass or fail the tests",
                        "in": "query",
                        "name": "check_pass",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "filter by the assessment name for web application security findings",
                        "in": "query",
                        "name": "details.assessment_name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Findings"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "504": {
                        "$ref": "#/components/responses/GatewayTimeout"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            },
            "post": {
                "description": "Get findings data for given company",
                "operationId": "getCompaniesFindingsPost",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    },
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "the format of the response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "enum": [
                                "json",
                                "xml",
                                "csv"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of affects_rating",
                        "in": "query",
                        "name": "affects_rating",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "filter the result by the value of host",
                        "in": "query",
                        "name": "evidence_key",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of first_seen. This parameter is incompatible with 'first_seen_lt' and 'first_seen_gt.",
                        "in": "query",
                        "name": "first_seen",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being less than given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_lt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being greater than given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_gt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being less than or equal to given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_lte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with first_seen being greater than or equal to given value. This parameter is incompatible with 'first_seen'.",
                        "in": "query",
                        "name": "first_seen_gte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of last_seen. This parameter is incompatible with 'last_seen_lt' and 'last_seen_gt'.",
                        "in": "query",
                        "name": "last_seen",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being less than given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_lt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being greater than given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_gt",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being less than or equal to than given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_lte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_seen being greater than or equal to given value. This parameter is incompatible with 'last_seen'.",
                        "in": "query",
                        "name": "last_seen_gte",
                        "required": false,
                        "schema": {
                            "format": "bitsight-date-time",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of severity.",
                        "in": "query",
                        "name": "severity",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity less than the given value.",
                        "in": "query",
                        "name": "severity_lt",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity less than or equal to the given value.",
                        "in": "query",
                        "name": "severity_lte",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity greater than the given value.",
                        "in": "query",
                        "name": "severity_gt",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by severity greater than or equal to the given value.",
                        "in": "query",
                        "name": "severity_gte",
                        "required": false,
                        "schema": {
                            "format": "float",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by the severity category.",
                        "in": "query",
                        "name": "severity_category",
                        "required": false,
                        "schema": {
                            "enum": [
                                "severe",
                                "material",
                                "moderate",
                                "minor"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_category.",
                        "in": "query",
                        "name": "risk_category",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Compromised Systems",
                                "Diligence",
                                "User Behavior"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_vector.",
                        "in": "query",
                        "name": "risk_vector",
                        "required": false,
                        "schema": {
                            "enum": [
                                "application_security",
                                "botnet_infections",
                                "data_breaches",
                                "desktop_software",
                                "dkim",
                                "dnssec",
                                "file_sharing",
                                "insecure_systems",
                                "malware_servers",
                                "mobile_app_publications",
                                "mobile_application_security",
                                "mobile_software",
                                "open_ports",
                                "patching_cadence",
                                "potentially_exploited",
                                "server_software",
                                "spam_propagation",
                                "spf",
                                "ssl_certificates",
                                "ssl_configurations",
                                "unsolicited_comm",
                                "web_appsec"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of risk_vector_label.",
                        "in": "query",
                        "name": "risk_vector_label",
                        "required": false,
                        "schema": {
                            "enum": [
                                "Web Application Headers",
                                "Botnet Infections",
                                "Breaches",
                                "Desktop Software",
                                "DKIM",
                                "DNSSEC",
                                "File Sharing",
                                "Insecure Systems",
                                "Malware Servers",
                                "Mobile App Publications",
                                "Mobile Application Security",
                                "Mobile Software",
                                "Open Ports",
                                "Patching Cadence",
                                "Potentially Exploited",
                                "Server Software",
                                "Spam Propagation",
                                "SPF",
                                "SSL Certificates",
                                "SSL Configurations",
                                "Unsolicited Communications",
                                "Web Application Security"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with tags containing given tag list.",
                        "in": "query",
                        "name": "tags_contains",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of grade. This parameter is incompatible with 'grade_lt' and 'grade_gt'.",
                        "in": "query",
                        "name": "details.grade",
                        "required": false,
                        "schema": {
                            "enum": [
                                "NEUTRAL",
                                "BAD",
                                "WARN",
                                "FAIR",
                                "GOOD",
                                "NONE"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with grade being less than given value. The order goes as BAD < WARN < FAIR < GOOD This parameter is incompatible with 'grade'.\n",
                        "in": "query",
                        "name": "details.grade_lt",
                        "required": false,
                        "schema": {
                            "enum": [
                                "BAD",
                                "WARN",
                                "FAIR",
                                "GOOD"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with grade being greater than given value. The order goes as NEUTRAL < BAD < WARN < FAIR This parameter is incompatible with 'grade'.\n",
                        "in": "query",
                        "name": "details.grade_gt",
                        "required": false,
                        "schema": {
                            "enum": [
                                "NEUTRAL",
                                "BAD",
                                "WARN",
                                "FAIR"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with observed_ips containing given ip address\n",
                        "in": "query",
                        "name": "details.observed_ips_contains",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by one or more infection names",
                        "in": "query",
                        "name": "details.infection.family",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the asset name, either an IP address or a domain.",
                        "in": "query",
                        "name": "assets.asset",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the asset category (critical, high, medium, low).",
                        "in": "query",
                        "name": "assets.category",
                        "required": false,
                        "schema": {
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the hosted_by name.",
                        "in": "query",
                        "name": "assets.hosted_by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter for findings that have one of the given vulnerabilities present\n",
                        "in": "query",
                        "name": "vulnerabilities",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter for findings that have at least one vulnerability in the given severity category\n",
                        "in": "query",
                        "name": "details.vulnerabilities.severity",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter by the asset category (critical, high, medium, low, none).",
                        "in": "query",
                        "name": "assets.combined_importance",
                        "required": false,
                        "schema": {
                            "enum": [
                                "critical",
                                "high",
                                "medium",
                                "low"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "If expand=remediation_history is set, include remediation info.",
                        "in": "query",
                        "name": "expand",
                        "required": false,
                        "schema": {
                            "enum": [
                                "remediation_history",
                                "tag_details"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of last_remediation_status_date. This parameter is incompatible with 'last_remediation_status_date_lt' and 'last_remediation_status_date_gt'.",
                        "in": "query",
                        "name": "last_remediation_status_date",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being less than given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_lt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being greater than given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_gt",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being less than or equal to than given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_lte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result with last_remediation_status_date being greater than or equal to given value. This parameter is incompatible with 'last_remediation_status_date'.",
                        "in": "query",
                        "name": "last_remediation_status_date_gte",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the value of last_remediation_status_label.",
                        "in": "query",
                        "name": "last_remediation_status_label",
                        "required": false,
                        "schema": {
                            "enum": [
                                "No Status",
                                "Open",
                                "To Do",
                                "Work In Progress",
                                "Resolved",
                                "Risk Accepted"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the guids of users assigned to the finding.",
                        "in": "query",
                        "name": "remediation_assignments",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    },
                    {
                        "description": "filter the results by attributed company guids of the finding.",
                        "in": "query",
                        "name": "attributed_companies.guid",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "filter the results by attributed company names of the finding.",
                        "in": "query",
                        "name": "attributed_companies.name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay less than the given value.",
                        "in": "query",
                        "name": "remaining_decay_lt",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay less than or equal to the given value.",
                        "in": "query",
                        "name": "remaining_decay_lte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay greater than the given value.",
                        "in": "query",
                        "name": "remaining_decay_gt",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter the result by remaining_decay greater than or equal to the given value.",
                        "in": "query",
                        "name": "remaining_decay_gte",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "number"
                        }
                    },
                    {
                        "description": "filter by one or more file sharing categories",
                        "in": "query",
                        "name": "file_sharing_category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "filter the result by the mobile application security findings that pass or fail the tests",
                        "in": "query",
                        "name": "check_pass",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Findings"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/core-affects-ratings-download": {
            "get": {
                "description": "Get the full core findings csv file",
                "parameters": [
                    {
                        "description": "The guid of the entity",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Set to true will run the async job that creates the csv or False to download",
                        "in": "query",
                        "name": "async",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "the format of the response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "csv",
                            "enum": [
                                "csv"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "text/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "CSV download of full core findings that affect the rating"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "created_time": {
                                            "description": "The time the job was created",
                                            "type": "string"
                                        },
                                        "guid": {
                                            "description": "The guid of the async job created",
                                            "type": "string"
                                        },
                                        "message": {
                                            "description": "Message describing the job status",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The status of the async job",
                                            "type": "string"
                                        },
                                        "updated_time": {
                                            "description": "The time the job was last updated",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Created job to upload csv file"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "429": {
                        "$ref": "#/components/responses/TooManyRequests"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/core-affects-ratings-download/created-date": {
            "get": {
                "description": "Get the latest created date of the full core findings csv file",
                "parameters": [
                    {
                        "description": "The guid of the entity",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "created_date": {
                                            "description": "The latest created date of the full findings csv file",
                                            "example": "2024-07-01",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "description": "The messsage for when no created date is found",
                                            "example": "Created date not found for entity and customer.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/filters": {
            "get": {
                "description": "Get filters for findings for given company",
                "operationId": "getCompaniesFindingsFilters",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vulnerabilities": {
                                            "items": {
                                                "properties": {
                                                    "alias": {
                                                        "description": "alias of the vulnerability",
                                                        "type": "string"
                                                    },
                                                    "confidence": {
                                                        "description": "The confidence in findings for this vulnerability, either HIGH or LOW.",
                                                        "enum": [
                                                            "HIGH",
                                                            "LOW"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "display_name": {
                                                        "description": "The display name of the vulnerability",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "CVE name of the vulnerability",
                                                        "type": "string"
                                                    },
                                                    "severity": {
                                                        "description": "The severity of the vulnerability",
                                                        "enum": [
                                                            "Severe",
                                                            "Material",
                                                            "Moderate",
                                                            "Minor"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/pcap": {
            "get": {
                "description": "Convert pcap_ids into URLs to fetch the pcap data",
                "operationId": "getCompaniesDiligencePcapUrls",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "the comma seperated list of pcap_ids to be tested. It is more efficient to test multiple ids at the same time",
                        "in": "query",
                        "name": "pcap_ids",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "if set, then find the pcap just by specifying the matching IP address and date",
                        "in": "query",
                        "name": "ip_only",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Finding_PcapMap"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/pcap/{pcap_id}": {
            "get": {
                "description": "Get the actual PCAP file for a specific pcap_id",
                "operationId": "getCompaniesDiligencePcapData",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "the pcap_id to be retrieved",
                        "in": "path",
                        "name": "pcap_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "if set, then find the pcap just by specifying the matching IP address and date",
                        "in": "query",
                        "name": "ip_only",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.tcpdump.pcap": {
                                "schema": {
                                    "$ref": "#/components/schemas/Finding_PcapData"
                                }
                            }
                        },
                        "description": "The actual PCAP data"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/refresh-requests": {
            "get": {
                "description": "Get findings refresh requests data for a company",
                "operationId": "getCompanyFindingsRefreshRequests",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Rolled up observation ID for the event",
                        "in": "query",
                        "name": "rolledup_observation_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The evidence key",
                        "in": "query",
                        "name": "evidence_key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The risk type slug",
                        "in": "query",
                        "name": "risk_vector",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The last updated time",
                        "in": "query",
                        "name": "last_updated_time",
                        "schema": {
                            "format": "datetime",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The requester - UUID",
                        "in": "query",
                        "name": "requester",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The request date",
                        "in": "query",
                        "name": "request_date",
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The request result reason code",
                        "in": "query",
                        "name": "reason_code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The request result finding date",
                        "in": "query",
                        "name": "result_finding_date",
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The request result status reason",
                        "in": "query",
                        "name": "status_reason",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "description": "The total number of results",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "description": "A set of links to traverse the result set",
                                            "properties": {
                                                "next": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "previous": {
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "results": {
                                            "description": "The actual results page",
                                            "items": {
                                                "$ref": "#/components/schemas/FindingsRefreshRequest"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/refresh-requests/notified": {
            "post": {
                "description": "Sets findings refresh requests notified for a company",
                "operationId": "getCompanyFindingsRefreshRequestsNotified",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/refresh-requests/summaries": {
            "get": {
                "description": "Get FindingsRefreshSummaries data for a company",
                "operationId": "getCompanyFindingsRefreshRequestsSummaries",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "risk type",
                        "in": "query",
                        "name": "risk_vector",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "days period to bound the results",
                        "in": "query",
                        "name": "period",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "last_refresh_status_reason": {
                                            "description": "the number of findings for each refresh status reason",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/refresh/summaries": {
            "get": {
                "description": "Get FindingsRefreshSummaries data for a company",
                "operationId": "getCompanyFindingsRefreshSummaries",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "risk type",
                        "in": "query",
                        "name": "risk_vector",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "days period to bound the results",
                        "in": "query",
                        "name": "period",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "last_refresh_status_reason": {
                                            "description": "the number of findings for each refresh status reason",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/{rolledup_observation_id}": {
            "patch": {
                "description": "pin unpin findings for core customers",
                "operationId": "patchCompaniesFindingsWithPin",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "rolledup_observation_id of the finding",
                        "in": "path",
                        "name": "rolledup_observation_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pinned": {
                                        "description": "To pin or unpin the findings",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "The pin unpin operation performed successfully on the given finding"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/findings/{rolledup_observation_id}/comments": {
            "get": {
                "description": "Get findings rolledup_observation_id's comments for a given company",
                "operationId": "getCompaniesFindingsRollupObservationIdComments",
                "parameters": [
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "rolledup_observation_id of the finding",
                        "in": "path",
                        "name": "rolledup_observation_id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of fields to expand",
                        "in": "query",
                        "name": "expand",
                        "required": false,
                        "schema": {
                            "enum": [
                                "remediation"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "the format of the response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "enum": [
                                "json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "count": {
                                            "description": "The total number of results",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "description": "A set of links to traverse the result set",
                                            "properties": {
                                                "next": {
                                                    "nullable": true,
                                                    "type": "string"
                                                },
                                                "previous": {
                                                    "nullable": true,
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "results": {
                                            "description": "The actual results page",
                                            "items": {
                                                "$ref": "#/components/schemas/FindingsComments"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/graph_data": {
            "get": {
                "description": "Get weekly rating progress of an organization",
                "operationId": "getCompaniesGraphData",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Risk_Vector"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/industries/statistics": {
            "get": {
                "description": "Get observation statistics of an organization and industry by risk vector",
                "operationId": "getCompaniesIndustriesStatistics",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Risk_Vector"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Unprocessable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/infections": {
            "get": {
                "description": "Get company's infections",
                "operationId": "getCompaniesInfections",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Fields"
                    },
                    {
                        "description": "filter for infections ids",
                        "in": "query",
                        "name": "id",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyInfectionObject"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Get data about the infections affecting the company"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Infections"
                ]
            }
        },
        "/companies/{guid}/infections/query": {
            "post": {
                "description": "Post/Get company's infections",
                "operationId": "postQueryCompaniesInfections",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "fields": {
                                        "description": "the fields to return in the response. Field names are simply the name of the field in the response object. Multiple fields can be specified by comma-separating their names.  Order the fields are specified is not reflected in the response.",
                                        "type": "string"
                                    },
                                    "id": {
                                        "description": "filter for infections ids",
                                        "type": "string"
                                    },
                                    "limit": {
                                        "description": "the maximum number of records to return",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "offset": {
                                        "description": "the starting record for the result set",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "sort": {
                                        "description": "the sort parameters",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyInfectionObject"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Get data about the infections affecting the company"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Infections"
                ]
            }
        },
        "/companies/{guid}/infrastructure/changes": {
            "get": {
                "description": "Get company's infrastructure changes",
                "operationId": "getCompanyInfraChanges",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Query"
                    },
                    {
                        "$ref": "#/components/parameters/Sort"
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The infrastructure type that was changed.",
                        "in": "query",
                        "name": "infrastructure_type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "cidr",
                                "domain"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter infrastructure changes with changed_date greater or equal than the specified ISO formatted date.",
                        "in": "query",
                        "name": "changed_date__gte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter infrastructure changes with changed_date greater than the specified ISO formatted date.",
                        "in": "query",
                        "name": "changed_date__gt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter infrastructure changes with changed_date less than or equal than the specified ISO formatted date.",
                        "in": "query",
                        "name": "changed_date__lte",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter infrastructure changes with changed_date less than the specified ISO formatted date.",
                        "in": "query",
                        "name": "changed_date__lt",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The infrastructure change type.",
                        "in": "query",
                        "name": "infrastructure_change_type",
                        "required": false,
                        "schema": {
                            "enum": [
                                "ADDITION",
                                "EXPIRATION",
                                "REMOVAL",
                                "RENEWAL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "GUID of the company",
                        "in": "query",
                        "name": "company",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The infrastructure source, e.g. 'Company Provided' or 'RIPE'.",
                        "in": "query",
                        "name": "source",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "If True, return infrastructure changes with no source.",
                        "in": "query",
                        "name": "source_isnull",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "The country code of the infrastructure.",
                        "in": "query",
                        "name": "country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "If True, return infrastructure changes with no country code.",
                        "in": "query",
                        "name": "country_isnull",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "enum": [
                                "json",
                                "csv"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyInfraChanges"
                                            },
                                            "type": "array"
                                        },
                                        "summaries": {
                                            "description": "Summary metadata about the response.",
                                            "properties": {
                                                "company": {
                                                    "items": {
                                                        "properties": {
                                                            "company": {
                                                                "type": "string"
                                                            },
                                                            "guid": {
                                                                "$ref": "#/x-common-definitions/company_guid"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "country": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "source": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK - Returns array of company infrastructure changes"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/infrastructure/reasons": {
            "get": {
                "description": "Get reasons for a company's CIDR attribution",
                "operationId": "getCompanyCidrReasons",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "IP or CIDR block that belongs to organization",
                        "in": "query",
                        "name": "net_cidr",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Flag to get reasons for all cidr matches",
                        "in": "query",
                        "name": "all_matching_cidrs",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Flag to get reasons for all cidr belonging to subsidiaries",
                        "in": "query",
                        "name": "include_subsidiaries",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Flag to get reasons by a specific source",
                        "in": "query",
                        "name": "source",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CIDRReasons"
                                }
                            }
                        },
                        "description": "OK - Returns array of CIDR Reasons"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/iq/assessments/document-collections": {
            "post": {
                "description": "Upload documents for IQ assessments for a company",
                "operationId": "uploadCompanyIqAssessmentDocuments",
                "parameters": [
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "files": {
                                        "description": "Array of files to upload for the assessment",
                                        "items": {
                                            "format": "binary",
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "files"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "document_collection_guid": {
                                            "description": "GUID of the created document collection",
                                            "example": "f6d5e215-d9cc-46fa-b7dd-54739c6bf0a1",
                                            "format": "uuid",
                                            "type": "string"
                                        },
                                        "documents": {
                                            "description": "List of uploaded documents",
                                            "items": {
                                                "properties": {
                                                    "guid": {
                                                        "description": "GUID of the uploaded document",
                                                        "example": "ac0544a4-f44c-4424-bf88-235e42dc22e3",
                                                        "format": "uuid",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Name of the uploaded document",
                                                        "example": "Privacy Edge API for Bulk Site Submission (1).pdf",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "guid",
                                                    "name"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "required": [
                                        "document_collection_guid",
                                        "documents"
                                    ],
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Documents uploaded successfully"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "example": "The total size of your documents exceeds the size limit of xx",
                                            "type": "string"
                                        },
                                        "status_code": {
                                            "example": 400,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "status_code",
                                        "message"
                                    ],
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Total collection exceeds size limit (no document + no document_collection created)"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "enum": [
                                                "Some of your documents failed to upload.",
                                                "Documents failed to upload."
                                            ],
                                            "example": "Some of your documents failed to upload.",
                                            "type": "string"
                                        },
                                        "status_code": {
                                            "example": 500,
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "status_code",
                                        "message"
                                    ],
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Upload failure (partial or full)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ]
            }
        },
        "/companies/{guid}/location-information": {
            "get": {
                "description": "Get location details for the company",
                "operationId": "getCompanyLocationInformation",
                "parameters": [
                    {
                        "description": "The guid of the company the location information is about",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "country_code": {
                                                "description": "the ISOcode for the country",
                                                "type": "string"
                                            },
                                            "country_name": {
                                                "description": "country name",
                                                "type": "string"
                                            },
                                            "subdivision_code": {
                                                "description": "ISO3166 code for the subdivision, e.g. state \"NC\"",
                                                "type": "string"
                                            },
                                            "subdivision_name": {
                                                "description": "human readable name for the subdivision, e.g. \"North Carolina\"",
                                                "type": "string"
                                            },
                                            "type": {
                                                "description": "the type of the location, e.g. HQ for headquarters",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "A list location details about the company"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company"
                ]
            }
        },
        "/companies/{guid}/logo-image": {
            "get": {
                "description": "Get a company's logo image",
                "operationId": "getCompanyLogoImage",
                "parameters": [
                    {
                        "description": "GUID of the organization, or \"default\" to return the default logo",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid_or_default"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "image/png": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/mobile-forensics": {
            "get": {
                "description": "Get mobile application forensics for a specific check ID",
                "operationId": "getMobileForensics",
                "parameters": [
                    {
                        "description": "company's guid",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Application identifier. The way to identify which application this forensics was found on.",
                        "example": "com.android.bitsighttech",
                        "in": "query",
                        "name": "identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The particular forensics check that was performed on the application.",
                        "example": "debug_flag_check",
                        "in": "query",
                        "name": "check",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The specific application version to get forensics for.",
                        "example": "3.0.1",
                        "in": "query",
                        "name": "app_version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/MobileAppForensics"
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/observations": {
            "get": {
                "description": "Retrieve detail information about risk category data of companies in the Company's portfolio",
                "operationId": "getCompanyObservations",
                "parameters": [
                    {
                        "description": "company's guid",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Risk types of observations, separated by commas",
                        "in": "query",
                        "name": "risk_types",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Beginning of date range the query will match",
                        "in": "query",
                        "name": "start_date",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "End of date range the query will match",
                        "in": "query",
                        "name": "end_date",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "IP address to match",
                        "in": "query",
                        "name": "ip_address",
                        "required": false,
                        "schema": {
                            "format": "ip",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Domain name to match",
                        "in": "query",
                        "name": "domain_name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Port number to match",
                        "in": "query",
                        "name": "port",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "List of observation grades",
                        "in": "query",
                        "name": "grades",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Number of results that a query will return",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Resource to page through results",
                        "in": "query",
                        "name": "cursor",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RiskObservations"
                                }
                            }
                        },
                        "description": "Array of individual records from all the risk types requested"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/observations/statistics": {
            "get": {
                "description": "Get observation statistics of an organization",
                "operationId": "getCompaniesObservationsStatistics",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "include information about event duration",
                        "in": "query",
                        "name": "include_durations",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "include information about patching cadence",
                        "in": "query",
                        "name": "include_patching_cadence",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Risk_Vector"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Unprocessable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/open-ports": {
            "get": {
                "description": "Get company's open ports details -- grades for events and services detected by port",
                "operationId": "getCompanyOpenPorts",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyOpenPorts"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/pdf": {
            "get": {
                "description": "Get a company overview report",
                "operationId": "getCompanyReport",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/preview": {
            "get": {
                "description": "Get Company Preview data for a company",
                "operationId": "getCompanyPreviewData",
                "parameters": [
                    {
                        "description": "The guid of the company the preview is for",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The format that the response should be in",
                        "in": "query",
                        "name": "format",
                        "required": true,
                        "schema": {
                            "default": "xml",
                            "enum": [
                                "xml",
                                "json"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyPreview"
                                }
                            }
                        },
                        "description": "company preview data"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/quick-view/ai-summary": {
            "get": {
                "description": "Get comprehensive Quick View data for a company including company ratings, highlights, infrastructure changes, risk vectors, and new findings, plus an AI-generated summary",
                "operationId": "getCompanyQuickViewAISummary",
                "parameters": [
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Start date for the AI summary (YYYY-MM-DD format, must be within 90 days from today and cannot go beyond end_date)",
                        "in": "query",
                        "name": "start_date",
                        "required": true,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date for the AI summary (YYYY-MM-DD format, defaults to today if empty, must be up to today and cannot go before start_date)",
                        "in": "query",
                        "name": "end_date",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "ai_summary": "Saperix, Inc.'s security posture improved from a rating of 730 to 750 between January 20th and January 21st, 2025. This increase is due to improvements in several risk vectors. Specifically, Patching Cadence improved from a poor grade (D) to a fair grade (C), and SSL Certificates improved from a poor grade (D) to a fair grade (C). Despite these improvements, the company still faces significant challenges, including 42 total findings across various risk vectors, such as Patching Cadence, SSL Certificates, and Web Application Security. Fifteen of these findings are severe, with 3 directly affecting critical assets. Additionally, 2 compromised systems were identified. While the overall rating improved, the presence of severe findings and compromised systems warrants continued attention to mitigate risks and further improve the company's security posture.",
                                    "company_ratings": {
                                        "current_rating": 730,
                                        "previous_rating": 750
                                    },
                                    "highlights": {
                                        "count": 3,
                                        "latest_highlight": {
                                            "date": "2024-01-20",
                                            "end_score": 730,
                                            "guid": "highlight-abc123-guid",
                                            "start_score": 750,
                                            "type": "rating-change"
                                        }
                                    },
                                    "infrastructure_changes": {
                                        "count": 27,
                                        "results": [
                                            {
                                                "change_date": "2024-11-27",
                                                "company": {
                                                    "guid": "eed24cfa-c3ea-4467-aefa-89648881e277",
                                                    "name": "Saperix Corporate"
                                                },
                                                "country": null,
                                                "end_date": null,
                                                "infrastructure": "43.201.37.81",
                                                "infrastructure_change_type": "ADDITION",
                                                "infrastructure_type": "CIDR",
                                                "prev_end_date": null,
                                                "source": "Customer-Provided",
                                                "start_date": "2024-11-26"
                                            },
                                            {
                                                "change_date": "2024-11-27",
                                                "company": {
                                                    "guid": "a940bb61-33c4-42c9-9231-c8194c305db3",
                                                    "name": "Saperix, Inc."
                                                },
                                                "country": null,
                                                "end_date": null,
                                                "infrastructure": "43.201.37.81",
                                                "infrastructure_change_type": "ADDITION",
                                                "infrastructure_type": "CIDR",
                                                "prev_end_date": null,
                                                "source": "Customer-Provided",
                                                "start_date": "2024-11-26"
                                            }
                                        ]
                                    },
                                    "new_findings": {
                                        "compromised_systems": {
                                            "count": 2
                                        },
                                        "severe": {
                                            "count": 15,
                                            "risk_vectors": [
                                                "Patching Cadence",
                                                "SSL Certificates"
                                            ]
                                        },
                                        "severe_affects_critical_assets": {
                                            "count": 3,
                                            "risk_vectors": [
                                                "Web Application Security"
                                            ]
                                        },
                                        "total": {
                                            "count": 42,
                                            "risk_vectors": [
                                                "Patching Cadence",
                                                "SSL Certificates",
                                                "Web Application Security"
                                            ]
                                        }
                                    },
                                    "risk_vectors": [
                                        {
                                            "current_grade": "C",
                                            "name": "Patching Cadence",
                                            "percent": 20,
                                            "previous_grade": "B",
                                            "slug": "patching_cadence"
                                        },
                                        {
                                            "current_grade": "D",
                                            "name": "SSL Certificates",
                                            "percent": 10,
                                            "previous_grade": "C",
                                            "slug": "ssl_certificates"
                                        }
                                    ]
                                },
                                "schema": {
                                    "properties": {
                                        "ai_summary": {
                                            "oneOf": [
                                                {
                                                    "description": "AI-generated summary analyzing the collected Quick View data including company ratings, highlights, infrastructure changes, risk vectors, and new findings",
                                                    "type": "string"
                                                },
                                                {
                                                    "description": "Error information when AI summary service fails",
                                                    "properties": {
                                                        "error": {
                                                            "description": "Error message if AI summary service fails",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "error"
                                                    ],
                                                    "type": "object"
                                                }
                                            ]
                                        },
                                        "company_ratings": {
                                            "description": "Company ratings data including current and previous ratings",
                                            "properties": {
                                                "current_rating": {
                                                    "description": "Current company rating",
                                                    "nullable": true,
                                                    "type": "integer"
                                                },
                                                "previous_rating": {
                                                    "description": "Previous company rating",
                                                    "nullable": true,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "highlights": {
                                            "description": "Highlights data including count and latest highlight",
                                            "properties": {
                                                "count": {
                                                    "description": "Total number of highlights in the date range",
                                                    "type": "integer"
                                                },
                                                "latest_highlight": {
                                                    "description": "Most recent highlight data, null if no highlights exist",
                                                    "nullable": true,
                                                    "properties": {
                                                        "date": {
                                                            "description": "Date of the highlight",
                                                            "format": "date",
                                                            "type": "string"
                                                        },
                                                        "end_score": {
                                                            "description": "Company rating after the change",
                                                            "type": "integer"
                                                        },
                                                        "guid": {
                                                            "description": "Unique identifier for the highlight",
                                                            "type": "string"
                                                        },
                                                        "start_score": {
                                                            "description": "Company rating before the change",
                                                            "type": "integer"
                                                        },
                                                        "type": {
                                                            "description": "Type of highlight",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "infrastructure_changes": {
                                            "description": "Infrastructure changes data including count and results",
                                            "properties": {
                                                "count": {
                                                    "description": "Total number of infrastructure changes in the date range",
                                                    "type": "integer"
                                                },
                                                "results": {
                                                    "description": "List of infrastructure changes (limited to most 3 recent changes)",
                                                    "items": {
                                                        "properties": {
                                                            "change_date": {
                                                                "description": "Date of the infrastructure change",
                                                                "format": "date",
                                                                "type": "string"
                                                            },
                                                            "company": {
                                                                "description": "Company information",
                                                                "properties": {
                                                                    "guid": {
                                                                        "description": "Company GUID",
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "description": "Company name",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "country": {
                                                                "description": "Country code",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "end_date": {
                                                                "description": "End date of the infrastructure",
                                                                "format": "date",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "infrastructure": {
                                                                "description": "Infrastructure identifier",
                                                                "type": "string"
                                                            },
                                                            "infrastructure_change_type": {
                                                                "description": "Type of change",
                                                                "type": "string"
                                                            },
                                                            "infrastructure_type": {
                                                                "description": "Type of infrastructure",
                                                                "type": "string"
                                                            },
                                                            "prev_end_date": {
                                                                "description": "Previous end date of the infrastructure",
                                                                "format": "date",
                                                                "nullable": true,
                                                                "type": "string"
                                                            },
                                                            "source": {
                                                                "description": "Source of the infrastructure data",
                                                                "type": "string"
                                                            },
                                                            "start_date": {
                                                                "description": "Start date of the infrastructure",
                                                                "format": "date",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "new_findings": {
                                            "oneOf": [
                                                {
                                                    "description": "New findings data including various categories and risk vector analysis",
                                                    "properties": {
                                                        "compromised_systems": {
                                                            "description": "Compromised systems findings",
                                                            "properties": {
                                                                "count": {
                                                                    "description": "Number of compromised systems findings",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "description": "Error information when new findings service fails",
                                                    "properties": {
                                                        "error": {
                                                            "description": "Error message if new findings service fails",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "error"
                                                    ],
                                                    "type": "object"
                                                },
                                                {
                                                    "description": "New findings data including various categories and risk vector analysis",
                                                    "properties": {
                                                        "severe": {
                                                            "description": "Severe findings",
                                                            "properties": {
                                                                "count": {
                                                                    "description": "Number of severe findings",
                                                                    "type": "integer"
                                                                },
                                                                "risk_vectors": {
                                                                    "description": "Risk vectors associated with severe findings",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "severe_affects_critical_assets": {
                                                            "description": "Severe findings affecting critical assets",
                                                            "properties": {
                                                                "count": {
                                                                    "description": "Number of severe findings affecting critical assets",
                                                                    "type": "integer"
                                                                },
                                                                "risk_vectors": {
                                                                    "description": "Risk vectors for severe findings affecting critical assets",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "total": {
                                                            "description": "Total findings data",
                                                            "properties": {
                                                                "count": {
                                                                    "description": "Total number of new findings",
                                                                    "type": "integer"
                                                                },
                                                                "risk_vectors": {
                                                                    "description": "All risk vectors associated with findings",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        },
                                        "risk_vectors": {
                                            "description": "List of risk vectors with grade changes (limited to top 2 by risk vector weight)",
                                            "items": {
                                                "properties": {
                                                    "current_grade": {
                                                        "description": "Current risk vector grade",
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "description": "Risk vector name",
                                                        "type": "string"
                                                    },
                                                    "percent": {
                                                        "description": "Risk vector weight as percentage",
                                                        "type": "integer"
                                                    },
                                                    "previous_grade": {
                                                        "description": "Previous risk vector grade",
                                                        "type": "string"
                                                    },
                                                    "slug": {
                                                        "description": "Risk vector slug identifier",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK - Returns comprehensive Quick View data including company ratings, highlights, infrastructure changes, risk vectors, and new findings, plus AI-generated summary"
                    },
                    "206": {
                        "content": {
                            "application/json": {
                                "example": {
                                    "ai_summary": {
                                        "error": "Failed to generate AI summary"
                                    },
                                    "company_ratings": {
                                        "count": 3,
                                        "latest_highlight": {
                                            "date": "2024-01-20",
                                            "end_score": 730,
                                            "guid": "highlight-abc123-guid",
                                            "start_score": 750,
                                            "type": "rating-change"
                                        }
                                    },
                                    "infrastructure_changes": {
                                        "error": "/infrastructure/changes endpoint returned status 500"
                                    },
                                    "new_findings": {
                                        "error": "/findings endpoint returned status 500"
                                    },
                                    "risk_vectors": {
                                        "error": "/defaults endpoint returned status 500"
                                    }
                                },
                                "schema": {
                                    "properties": {
                                        "ai_summary": {
                                            "oneOf": [
                                                {
                                                    "description": "AI-generated summary based on available data when some services fail",
                                                    "type": "string"
                                                },
                                                {
                                                    "description": "Error information when AI summary service fails",
                                                    "properties": {
                                                        "error": {
                                                            "description": "Error message if AI summary service fails",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "error"
                                                    ],
                                                    "type": "object"
                                                }
                                            ]
                                        },
                                        "company_ratings": {
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "error": {
                                                            "description": "Error message if company ratings service fails",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "error"
                                                    ],
                                                    "type": "object"
                                                },
                                                {
                                                    "properties": {
                                                        "current_rating": {
                                                            "description": "Current company rating",
                                                            "nullable": true,
                                                            "type": "integer"
                                                        },
                                                        "previous_rating": {
                                                            "description": "Previous company rating",
                                                            "nullable": true,
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "current_rating",
                                                        "previous_rating"
                                                    ],
                                                    "type": "object"
                                                }
                                            ]
                                        },
                                        "highlights": {
                                            "description": "Highlights data or error information when highlights service fails",
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "error": {
                                                            "description": "Error message if highlights service fails",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "error"
                                                    ],
                                                    "type": "object"
                                                },
                                                {
                                                    "properties": {
                                                        "count": {
                                                            "description": "Total number of highlights in the date range",
                                                            "type": "integer"
                                                        },
                                                        "latest_highlight": {
                                                            "description": "Most recent highlight data, null if no highlights exist",
                                                            "nullable": true,
                                                            "properties": {
                                                                "date": {
                                                                    "description": "Date of the highlight",
                                                                    "format": "date",
                                                                    "type": "string"
                                                                },
                                                                "end_score": {
                                                                    "description": "Company rating after the change",
                                                                    "type": "integer"
                                                                },
                                                                "guid": {
                                                                    "description": "Unique identifier for the highlight",
                                                                    "type": "string"
                                                                },
                                                                "start_score": {
                                                                    "description": "Company rating before the change",
                                                                    "type": "integer"
                                                                },
                                                                "type": {
                                                                    "description": "Type of highlight",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "count",
                                                        "latest_highlight"
                                                    ],
                                                    "type": "object"
                                                }
                                            ]
                                        },
                                        "infrastructure_changes": {
                                            "description": "Infrastructure changes data or error information when infrastructure changes service fails",
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "error": {
                                                            "description": "Error message if infrastructure changes service fails",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "error"
                                                    ],
                                                    "type": "object"
                                                },
                                                {
                                                    "properties": {
                                                        "count": {
                                                            "description": "Total number of infrastructure changes in the date range",
                                                            "type": "integer"
                                                        },
                                                        "results": {
                                                            "description": "List of infrastructure changes (limited to most 3 recent changes)",
                                                            "items": {
                                                                "properties": {
                                                                    "change_date": {
                                                                        "description": "Date of the infrastructure change",
                                                                        "format": "date",
                                                                        "type": "string"
                                                                    },
                                                                    "company": {
                                                                        "description": "Company information",
                                                                        "properties": {
                                                                            "guid": {
                                                                                "description": "Company GUID",
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "description": "Company name",
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "country": {
                                                                        "description": "Country code",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "end_date": {
                                                                        "description": "End date of the infrastructure",
                                                                        "format": "date",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "infrastructure": {
                                                                        "description": "Infrastructure identifier",
                                                                        "type": "string"
                                                                    },
                                                                    "infrastructure_change_type": {
                                                                        "description": "Type of change",
                                                                        "type": "string"
                                                                    },
                                                                    "infrastructure_type": {
                                                                        "description": "Type of infrastructure",
                                                                        "type": "string"
                                                                    },
                                                                    "prev_end_date": {
                                                                        "description": "Previous end date of the infrastructure",
                                                                        "format": "date",
                                                                        "nullable": true,
                                                                        "type": "string"
                                                                    },
                                                                    "source": {
                                                                        "description": "Source of the infrastructure data",
                                                                        "type": "string"
                                                                    },
                                                                    "start_date": {
                                                                        "description": "Start date of the infrastructure",
                                                                        "format": "date",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "count",
                                                        "results"
                                                    ],
                                                    "type": "object"
                                                }
                                            ]
                                        },
                                        "new_findings": {
                                            "oneOf": [
                                                {
                                                    "description": "New findings data including various categories and risk vector analysis",
                                                    "properties": {
                                                        "compromised_systems": {
                                                            "description": "Compromised systems findings",
                                                            "properties": {
                                                                "count": {
                                                                    "description": "Number of compromised systems findings",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "severe": {
                                                            "description": "Severe findings",
                                                            "properties": {
                                                                "count": {
                                                                    "description": "Number of severe findings",
                                                                    "type": "integer"
                                                                },
                                                                "risk_vectors": {
                                                                    "description": "Risk vectors associated with severe findings",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "severe_affects_critical_assets": {
                                                            "description": "Severe findings affecting critical assets",
                                                            "properties": {
                                                                "count": {
                                                                    "description": "Number of severe findings affecting critical assets",
                                                                    "type": "integer"
                                                                },
                                                                "risk_vectors": {
                                                                    "description": "Risk vectors for severe findings affecting critical assets",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "total": {
                                                            "description": "Total findings data",
                                                            "properties": {
                                                                "count": {
                                                                    "description": "Total number of new findings",
                                                                    "type": "integer"
                                                                },
                                                                "risk_vectors": {
                                                                    "description": "All risk vectors associated with findings",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                {
                                                    "description": "Error information when new findings service fails",
                                                    "properties": {
                                                        "error": {
                                                            "description": "Error message if new findings service fails",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "error"
                                                    ],
                                                    "type": "object"
                                                }
                                            ]
                                        },
                                        "risk_vectors": {
                                            "description": "Risk vectors data or error information when risk vectors service fails",
                                            "oneOf": [
                                                {
                                                    "description": "List of risk vectors with grade changes (limited to top 2 by risk vector weight)",
                                                    "items": {
                                                        "properties": {
                                                            "current_grade": {
                                                                "description": "Current risk vector grade",
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "description": "Risk vector name",
                                                                "type": "string"
                                                            },
                                                            "percent": {
                                                                "description": "Risk vector weight percentage",
                                                                "type": "number"
                                                            },
                                                            "previous_grade": {
                                                                "description": "Previous risk vector grade",
                                                                "type": "string"
                                                            },
                                                            "slug": {
                                                                "description": "Risk vector slug",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "current_grade",
                                                            "name",
                                                            "percent",
                                                            "previous_grade",
                                                            "slug"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                {
                                                    "description": "Error information when risk vectors service fails",
                                                    "properties": {
                                                        "error": {
                                                            "description": "Error message if risk vectors service fails",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "error"
                                                    ],
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Partial Content - Returns partial data when some internal services fail"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "description": "Specific validation error message",
                                            "enum": [
                                                "start_date is required",
                                                "Invalid date format. Use YYYY-MM-DD",
                                                "start_date must be before or equal to end_date",
                                                "end_date cannot be set beyond today",
                                                "start_date must be within 90 days from today"
                                            ],
                                            "example": "end_date cannot be set beyond today",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad Request - Validation errors for date parameters"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "description": "Error message indicating the company GUID was not found",
                                            "example": "Company with GUID 'invalid-guid-123' not found",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Quick View"
                ]
            }
        },
        "/companies/{guid}/rating-release-previews": {
            "get": {
                "description": "Lists the vendor access requests sent from the user's organization",
                "operationId": "getReleasePreview",
                "parameters": [
                    {
                        "description": "The guid of the company the preview is for",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CompanyReleasePreview"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK - Returns release previews of certain entity"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/remediation-plans": {
            "get": {
                "description": "Get company's remediation-plans",
                "operationId": "getCompanyRemediationPlans",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "the type of plan to get",
                        "in": "query",
                        "name": "forecast_type",
                        "required": true,
                        "schema": {
                            "enum": [
                                "severe",
                                "high"
                            ],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompletePlan"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompletePlan"
                                }
                            }
                        },
                        "description": "OK - Returns added Plan"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/reports/company-preview": {
            "get": {
                "description": "Get Company Preview Report for a company",
                "operationId": "getCompanyPreview",
                "parameters": [
                    {
                        "description": "The guid of the company the preview is for",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The format that the response should be in",
                        "in": "query",
                        "name": "format",
                        "required": true,
                        "schema": {
                            "default": "html",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyPreviewReport"
                                }
                            }
                        },
                        "description": "A company preview report"
                    },
                    "401": {
                        "description": "Not Authorized"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Reports",
                    "Company"
                ]
            },
            "post": {
                "description": "Post Company Preview Report for a company",
                "operationId": "postCompanyPreview",
                "parameters": [
                    {
                        "description": "The guid of the company the preview is for",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The format that the response should be in",
                        "in": "query",
                        "name": "format",
                        "required": true,
                        "schema": {
                            "default": "html",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyPreviewReport"
                                }
                            }
                        },
                        "description": "A company preview report"
                    },
                    "401": {
                        "description": "Not Authorized"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Reports",
                    "Company"
                ]
            }
        },
        "/companies/{guid}/reports/overview": {
            "get": {
                "description": "Get a company overview report",
                "operationId": "getCompanyOverviewReport",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/reports/spi": {
            "get": {
                "description": "Get available SPI reports for a given company.",
                "operationId": "getAvailableSpiReports",
                "parameters": [
                    {
                        "description": "The guid of the company the SPI reports list is for.",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailableSpiReports"
                                }
                            }
                        },
                        "description": "A list of SPI report slugs and available months to query for."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "description": "The company is in blacklist and can not generate the spi report."
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company",
                    "Reports"
                ]
            }
        },
        "/companies/{guid}/reports/spi/{report_name}/evaluations": {
            "get": {
                "description": "Get User-Submitted Evaluations for a company",
                "operationId": "getUserSubmittedEvaluations",
                "parameters": [
                    {
                        "description": "The guid of the company the SPI report is for.",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The report version to view.",
                        "in": "path",
                        "name": "report_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The specified month to fetch a report for. Must be in YYYY-MM format.",
                        "in": "query",
                        "name": "report_month",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The range of months to return in a report. This must be an integer between 1 and 10.",
                        "in": "query",
                        "name": "month_range",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/UserSubmittedEvaluation"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "User-Submitted Evaluations for a given company."
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company",
                    "Reports"
                ]
            },
            "post": {
                "description": "Create a User-Submitted Evaluation for a company",
                "operationId": "createUserSubmittedEvaluation",
                "parameters": [
                    {
                        "description": "The guid of the company the SPI report is for.",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The report version to view.",
                        "in": "path",
                        "name": "report_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "body": {
                                        "description": "New evaluation info.",
                                        "properties": {
                                            "comment": {
                                                "type": "string"
                                            },
                                            "control_id": {
                                                "type": "string"
                                            },
                                            "start_date": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "required": [
                                    "object"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSubmittedEvaluation"
                                }
                            }
                        },
                        "description": "User-Submitted Evaluation is created."
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company",
                    "Reports"
                ]
            }
        },
        "/companies/{guid}/reports/spi/{report_name}/evaluations/{evaluation_guid}": {
            "delete": {
                "description": "Delete a User-Submitted Evaluation for a company",
                "operationId": "deleteUserSubmittedEvaluation",
                "parameters": [
                    {
                        "description": "The guid of the company the SPI report is for.",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The report version to view.",
                        "in": "path",
                        "name": "report_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The guid of the evaluation to update.",
                        "in": "path",
                        "name": "evaluation_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The evaluation is deleted successfully."
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company",
                    "Reports"
                ]
            },
            "patch": {
                "description": "Update a User-Submitted Evaluation for a company",
                "operationId": "patchUserSubmittedEvaluations",
                "parameters": [
                    {
                        "description": "The guid of the company the SPI report is for.",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The report version to view.",
                        "in": "path",
                        "name": "report_name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The guid of the evaluation to update.",
                        "in": "path",
                        "name": "evaluation_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "body": {
                                        "description": "Evaluation info to update.",
                                        "properties": {
                                            "end_date": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSubmittedEvaluation"
                                }
                            }
                        },
                        "description": "The evaluation is updated successfully."
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company",
                    "Reports"
                ]
            }
        },
        "/companies/{guid}/reports/spi/{spi_report_version}/": {
            "get": {
                "description": "Get Company Preview Report for a company.",
                "operationId": "getSpiReport",
                "parameters": [
                    {
                        "description": "The guid of the company the SPI report is for.",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "The report version to view.",
                        "in": "path",
                        "name": "spi_report_version",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The specified month to fetch a report for. Must be in YYYY-MM format.",
                        "in": "query",
                        "name": "report_month",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The range of months to return in a report. This must be an integer between 1 and 10.",
                        "in": "query",
                        "name": "month_range",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpiReport"
                                }
                            }
                        },
                        "description": "An SPI report for a given company."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company",
                    "Reports"
                ]
            }
        },
        "/companies/{guid}/risk-vectors/summaries": {
            "get": {
                "description": "Get the company risk vector summaries",
                "operationId": "getCompanyRiskVectorSummaries",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "csv",
                            "enum": [
                                "csv"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma delimited list of fields to return in each result",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/software-counts/desktop-software": {
            "get": {
                "description": "Get company's top OS, browser and currency counts for desktop software",
                "operationId": "getCompanyDesktopSoftwareCounts",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DesktopSoftwareCounts"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/software-counts/mobile-software": {
            "get": {
                "description": "Get company's top OS, browser and currency counts for mobile software",
                "operationId": "getCompanyMobileSoftwareCounts",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MobileSoftwareCounts"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/software-counts/server-software": {
            "get": {
                "description": "Get company's server software types and versions counts",
                "operationId": "getCompanyServerSoftwareCounts",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerSoftwareCounts"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/subscribers/statistics": {
            "get": {
                "description": "Get historical subscriber count statistics for an entity.",
                "operationId": "getSubscriberStatistics",
                "parameters": [
                    {
                        "description": "company's guid",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Period of time to use for the historical breakdown.",
                        "example": "quarterly",
                        "in": "query",
                        "name": "period",
                        "required": false,
                        "schema": {
                            "default": "quarterly",
                            "enum": [
                                "quarterly",
                                "monthly"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "The start date in the past to start querying for subscriber counts.",
                        "example": "2019-01-01",
                        "in": "query",
                        "name": "start_date",
                        "required": false,
                        "schema": {
                            "default": "Two years ago from the current date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "The end date for querying subscriber counts.",
                        "example": "2021-06-23",
                        "in": "query",
                        "name": "end_date",
                        "required": false,
                        "schema": {
                            "default": "Today",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriberStatistics"
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/subscribers/summaries": {
            "get": {
                "description": "Get current subscriber industry breakdown for an entity.",
                "operationId": "getSubscriberSummaries",
                "parameters": [
                    {
                        "description": "company's guid",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/SubscriberSummaries"
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/subsidiaries": {
            "get": {
                "description": "Get a list of with my subsidiaries including parent company",
                "operationId": "listCompanyAndSubsidiaries",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubsidiaryDetails"
                                }
                            }
                        },
                        "description": "get my subsidiaries and company"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies",
                    "Subsidiaries"
                ]
            }
        },
        "/companies/{guid}/summary-risk-vector-report": {
            "post": {
                "description": "Return a company's Summary Risk Vector grades, along with its full rating history and 30-day rating trend.  This endpoint requires the use of a Summary Risk Vector License.",
                "operationId": "getSummaryRiskVectorReport",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "use_license": {
                                        "default": false,
                                        "description": "Confirm that a Summary Risk Vector license can be spent. This only applies if the entity is not in the portfolio and has full visibility into risk vectors.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SummaryRiskVectorReport"
                                }
                            }
                        },
                        "description": "The Summary Risk Vector Report"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/tags": {
            "get": {
                "description": "API to return a paginated list of tags for a company",
                "operationId": "getCompanyTags",
                "parameters": [
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompanyTags"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "summary": "Get Tags for a Company",
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/threats/attestations": {
            "get": {
                "description": "Get threat attestations for a company",
                "operationId": "getCompanyThreatAttestations",
                "parameters": [
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Comma-separated list of fields to include in the response. Supports nested fields (e.g., 'threat.guid,attestation.slug,is_public')",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "schema": {
                            "example": "is_public,threat.guid,attestation.slug",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompanyThreatsAttestations"
                                }
                            }
                        },
                        "description": "List of threat attestations"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/threats/attestations/bulk": {
            "post": {
                "description": "Bulk Manage Threat Attestations",
                "operationId": "postManageThreatAttestation",
                "parameters": [
                    {
                        "description": "GUID of the company",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "add": {
                                        "description": "List of attestations to add.",
                                        "items": {
                                            "$ref": "#/components/schemas/ManageThreatAttestation"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Threat attestation(s) successfully submitted"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "items": {
                                                "properties": {
                                                    "attestation_slug": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "is_public": {
                                                        "type": "boolean"
                                                    },
                                                    "threat_guid": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/companies/{guid}/tier/recommendation": {
            "get": {
                "description": "Get Tier Recommendation for a company",
                "operationId": "getCompanyTierRecommendation",
                "parameters": [
                    {
                        "description": "The guid of the company the recommendation is for",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyTierRecommendation"
                                }
                            }
                        },
                        "description": "A company tier recommendation"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company"
                ]
            }
        },
        "/companies/{guid}/user-behavior/statistics": {
            "get": {
                "description": "Get user behavior statistics of an organization",
                "operationId": "getCompaniesUserBehaviorStatistics",
                "parameters": [
                    {
                        "description": "GUID of the organization",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Risk_Vector"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Companies"
                ]
            }
        },
        "/company-life-cycle-types": {
            "get": {
                "description": "Get life cycle type information",
                "operationId": "getLifeCycleTypes",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/LifeCycleType"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Life Cycles"
                ]
            }
        },
        "/company-life-cycles": {
            "get": {
                "description": "Get vendor life cycles for current customer",
                "operationId": "getLifeCycles",
                "parameters": [
                    {
                        "description": "Comma separated list of life cycle type names to filter for",
                        "in": "query",
                        "name": "life_cycle_type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Comma separated list of company guids to filter for",
                        "in": "query",
                        "name": "company_guid",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    },
                    {
                        "description": "Filter the result by is_completed",
                        "in": "query",
                        "name": "is_completed",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filter the customer vendor life cycles for companies in the specified folder",
                        "in": "query",
                        "name": "folder",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    },
                    {
                        "description": "Filter the customer vendor life cycles for companies in the specified tier",
                        "in": "query",
                        "name": "tier",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/LifeCycle"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Life Cycles"
                ]
            },
            "post": {
                "description": "Update vendor life cycles",
                "operationId": "postLifeCycles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "body": {
                                        "description": "All operations to be applied",
                                        "properties": {
                                            "company_guids": {
                                                "description": "List of unique company identifiers",
                                                "items": {
                                                    "$ref": "#/x-common-definitions/company_guid"
                                                },
                                                "type": "array"
                                            },
                                            "next_life_cycle_type": {
                                                "description": "Life cycle type for the next life cycle",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "added_life_cycles": {
                                            "description": "List of life cycles that were successfully added",
                                            "items": {
                                                "$ref": "#/components/schemas/LifeCycle"
                                            },
                                            "type": "array"
                                        },
                                        "completed_life_cycles": {
                                            "description": "List of life cycles that were successfully completed",
                                            "items": {
                                                "$ref": "#/components/schemas/LifeCycle"
                                            },
                                            "type": "array"
                                        },
                                        "not_updated_life_cycles": {
                                            "description": "List of company guids for which life cycle update failed",
                                            "items": {
                                                "properties": {
                                                    "company_guid": {
                                                        "$ref": "#/x-common-definitions/company_guid",
                                                        "description": "The unique identifier of the company"
                                                    },
                                                    "errors": {
                                                        "description": "The reason why the life cycle update failed",
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation, or unsuccessful operation with known reasons"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Life Cycles"
                ]
            }
        },
        "/company-life-cycles/{life_cycle_guid}/activities/{activity_slug}": {
            "patch": {
                "description": "Update status of the provided activity",
                "operationId": "updateLifeCycleActivity",
                "parameters": [
                    {
                        "description": "A unique identifier of the life cycle",
                        "in": "path",
                        "name": "life_cycle_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A unique identifier of an activity",
                        "in": "path",
                        "name": "activity_slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "body": {
                                        "description": "All operations to be applied",
                                        "properties": {
                                            "is_completed": {
                                                "description": "Set True to complete the activity else False",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LifeCycleActivity"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Life Cycles"
                ]
            }
        },
        "/company-rankings": {
            "get": {
                "description": "get list of company-rankings lists",
                "operationId": "listCompanyRankings",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "unique id for the object",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "name of the ranking, e.g. Fortune 1000",
                                                "type": "string"
                                            },
                                            "year": {
                                                "description": "year of the ranking, e.g. 2018",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "description": "Not Authorized"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ]
            }
        },
        "/company-recommendations": {
            "get": {
                "description": "Get company recommendations for current customer",
                "operationId": "getCompanyRecommendations",
                "parameters": [
                    {
                        "description": "Sort the result by either \"name\" or \"importance\", ascending or descending. Allows for multiple sorting parameters (hierarchical).",
                        "example": "-importance,name",
                        "in": "query",
                        "name": "sort",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter the result by a query on the \"name\" field",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by name(s), comma separated, case sensitive and full match.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by name, case insensitive and allowing partial matches.",
                        "in": "query",
                        "name": "name_q",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by industry(ies), comma separated, case sensitive and full match.",
                        "in": "query",
                        "name": "industry",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by industry, case insensitive and allowing partial matches.",
                        "in": "query",
                        "name": "industry_q",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by importance level(s), comma separated.",
                        "in": "query",
                        "name": "importance_level",
                        "required": false,
                        "schema": {
                            "enum": [
                                "low",
                                "medium",
                                "high"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by importance, exact match.",
                        "in": "query",
                        "name": "importance",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by importances less than the provided value.",
                        "in": "query",
                        "name": "importance_lt",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by importances less than or equal to the provided value.",
                        "in": "query",
                        "name": "importance_lte",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by importances greater than the provided value.",
                        "in": "query",
                        "name": "importance_gt",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by importances greater than or equal to the provided value.",
                        "in": "query",
                        "name": "importance_gte",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Filter by unsubscribed recommendations only if set to false, recommend everything otherwise.",
                        "in": "query",
                        "name": "allow_subscribed",
                        "required": false,
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "The offset to apply to the recommendations list.",
                        "in": "query",
                        "name": "offset",
                        "required": false,
                        "schema": {
                            "default": 0,
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The number of recommendations to return.",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 10,
                            "maximum": 100,
                            "minimum": 0,
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyRecommendations"
                                }
                            }
                        },
                        "description": "OK, returns the list of recommendations for the customer."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company Recommendations"
                ]
            }
        },
        "/company-recommendations/my-company": {
            "get": {
                "description": "Get company information for the user's customer. This company can be real or a recommendation.",
                "operationId": "getMyCompanyRecommendation",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "The information of costumer's entity",
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyRecommendationMyCompany"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company Recommendations"
                ]
            }
        },
        "/company-relationships": {
            "get": {
                "description": "Get company relationships for current customer",
                "operationId": "getCompanyRelationships",
                "parameters": [
                    {
                        "description": "Filter the result by relationship_type",
                        "in": "query",
                        "name": "relationship_type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter the result by company_guid",
                        "in": "query",
                        "name": "company_guid",
                        "required": false,
                        "schema": {
                            "$ref": "#/x-common-definitions/company_guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyRelationships"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company Relationships"
                ]
            }
        },
        "/company-relationships/bulk": {
            "patch": {
                "description": "Add/Modify/Delete relationships for current customer",
                "operationId": "changeCompanyRelationships",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "modifications": {
                                        "description": "All operations to be applied",
                                        "items": {
                                            "properties": {
                                                "company_guid": {
                                                    "$ref": "#/x-common-definitions/company_guid",
                                                    "description": "The identifier of the company"
                                                },
                                                "relationship_type": {
                                                    "description": "The type of relationship between this company and the customer",
                                                    "enum": [
                                                        "vendor",
                                                        "strategic_partner",
                                                        "competitor",
                                                        "fourth_party",
                                                        "subsidiary",
                                                        "other"
                                                    ],
                                                    "example": "vendor",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "not_removed_relationships": {
                                            "description": "List of relationship identifiers that were failed removed",
                                            "items": {
                                                "properties": {
                                                    "company_guid": {
                                                        "$ref": "#/x-common-definitions/company_guid",
                                                        "description": "The identifier of the relationship"
                                                    },
                                                    "errors": {
                                                        "description": "The reason why the relationship was failed to be removed",
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "not_updated_relationships": {
                                            "description": "List of relationships that were failed to be added",
                                            "items": {
                                                "properties": {
                                                    "company_guid": {
                                                        "$ref": "#/x-common-definitions/company_guid",
                                                        "description": "The identifier of the comapny in this relationship"
                                                    },
                                                    "errors": {
                                                        "description": "The reason why the relationship was failed to be updated",
                                                        "type": "object"
                                                    },
                                                    "relationship_type": {
                                                        "description": "The type of relationship between this company and the customer",
                                                        "enum": [
                                                            "vendor",
                                                            "strategic_partner",
                                                            "competitor",
                                                            "fourth_party",
                                                            "subsidiary",
                                                            "other"
                                                        ],
                                                        "example": "vendor",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "removed_relationships": {
                                            "description": "List of relationship identifiers that were successfully removed",
                                            "items": {
                                                "description": "The identifier of the relationship",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "updated_relationships": {
                                            "description": "List of relationships that were successfully updated",
                                            "items": {
                                                "$ref": "#/components/schemas/CompanyRelationship"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Successful operation, or unsuccessful operation with known reasons"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    },
                    "503": {
                        "$ref": "#/components/responses/ServiceUnavailable"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Company Relationships Bulk Operation"
                ]
            }
        },
        "/contacts": {
            "get": {
                "description": "listing customer company contacts",
                "operationId": "listCustomerCompanyContacts",
                "parameters": [
                    {
                        "description": "comma separated list of company guids to filter for",
                        "in": "query",
                        "name": "companies",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CustomerCompanyContact"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK - Returns list of contacts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers",
                    "Companies",
                    "Contacts"
                ]
            },
            "post": {
                "description": "Post endpoint to create a customer company contact with or w/o customer relationship data.",
                "operationId": "createCustomerCompanyContact",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerCompanyContact",
                                "required": [
                                    "company_guid",
                                    "contact_type",
                                    "email"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CustomerCompanyContact"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK - Returns list of contacts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers",
                    "Companies",
                    "Contacts"
                ]
            }
        },
        "/contacts/bulk": {
            "put": {
                "description": "Put endpoint to bulk update or create customer company contacts.",
                "operationId": "bulkUpdateOrCreateCustomerCompanyContact",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/CustomerCompanyContact",
                                    "required": [
                                        "company_guid",
                                        "contact_type",
                                        "email"
                                    ]
                                },
                                "type": "array"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/CustomerCompanyContact"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK - Returns new and updated Contacts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers",
                    "Companies",
                    "Contacts"
                ]
            }
        },
        "/contacts/latest": {
            "get": {
                "description": "List only the customer company contacts with the latest updated_at timestamp",
                "operationId": "listLatestCustomerCompanyContacts",
                "parameters": [
                    {
                        "description": "comma separated list of company guids to filter for",
                        "in": "query",
                        "name": "companies",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CustomerCompanyContact"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK - Returns list of contacts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers",
                    "Companies",
                    "Contacts"
                ]
            }
        },
        "/contacts/latest/query": {
            "post": {
                "description": "Post/Get endpoint to list only the most recently updated customer company contacts",
                "operationId": "postQueryLatestCustomerCompanyContacts",
                "parameters": [
                    {
                        "description": "comma separated list of company guids to filter for",
                        "in": "query",
                        "name": "companies",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "companies": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CustomerCompanyContact"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK - Returns list of contacts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers",
                    "Companies",
                    "Contacts"
                ]
            }
        },
        "/contacts/query": {
            "post": {
                "description": "Post/Get endpoint to list customer company contacts",
                "operationId": "postQueryCustomerCompanyContacts",
                "parameters": [
                    {
                        "description": "comma separated list of company guids to filter for",
                        "in": "query",
                        "name": "companies",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "companies": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CustomerCompanyContact"
                                            },
                                            "type": "array"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK - Returns list of contacts"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers",
                    "Companies",
                    "Contacts"
                ]
            }
        },
        "/contacts/{contact_guid}": {
            "delete": {
                "description": "getting a customer company contact with customer relationship data.",
                "operationId": "deleteCustomerCompanyContact",
                "parameters": [
                    {
                        "description": "contact's guid",
                        "in": "path",
                        "name": "contact_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCompanyContact"
                                }
                            }
                        },
                        "description": "OK - Returns Deleted Contact"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers",
                    "Companies",
                    "Contacts"
                ]
            },
            "get": {
                "description": "getting a customer company contact with customer relationship data.",
                "operationId": "getCustomerCompanyContact",
                "parameters": [
                    {
                        "description": "contact's guid",
                        "in": "path",
                        "name": "contact_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCompanyContact"
                                }
                            }
                        },
                        "description": "OK - Returns Contact"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers",
                    "Companies",
                    "Contacts"
                ]
            },
            "patch": {
                "description": "getting a customer company contact with customer relationship data.",
                "operationId": "updateCustomerCompanyContact",
                "parameters": [
                    {
                        "description": "contact's guid",
                        "in": "path",
                        "name": "contact_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerCompanyContact",
                                "required": [
                                    "company_guid",
                                    "contact_type",
                                    "email"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerCompanyContact"
                                }
                            }
                        },
                        "description": "OK - Returns updated contact"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers",
                    "Companies",
                    "Contacts"
                ]
            }
        },
        "/countries/{country_guid}/industries/{country_industry_guid}/companies": {
            "get": {
                "description": "Lists companies belonging to the same industry as the provided country industry, with IP footprint in the provided country\n",
                "operationId": "countryIndustryCompanies",
                "parameters": [
                    {
                        "description": "Country guid, must be in the customer portfolio",
                        "in": "path",
                        "name": "country_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    },
                    {
                        "description": "Country industry guid, must match the provided country",
                        "in": "path",
                        "name": "country_industry_guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/guid"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    },
                    {
                        "description": "the fields to sort the response objects by.  Field names are simply the name of the field in the response object. Specifying a field sorts it in ascending order (A->Z). To sort in reverse (descending) order, place a minus sign (-) immediately before the field name. Ex, '-name' will sort by name in descending order.\n",
                        "in": "query",
                        "name": "q",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CountryIndustryCompanies"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Sovereign"
                ]
            }
        },
        "/current-ratings": {
            "get": {
                "description": "Gets all available current ratings",
                "operationId": "getCurrentRatings",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Limit"
                    },
                    {
                        "$ref": "#/components/parameters/Offset"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/x-common-definitions/paginated_result",
                                    "properties": {
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CurrentRatingsEntity"
                                            },
                                            "type": "array"
                                        },
                                        "summaries": {
                                            "description": "Summary metadata about the response.",
                                            "properties": {
                                                "rating_as_of": {
                                                    "description": "The latest rating date",
                                                    "format": "date",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Current Ratings",
                    "Licenses"
                ]
            },
            "post": {
                "description": "Gets current ratings for the informed companies and use licenses (if necessary)",
                "operationId": "postCurrentRatings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "guids": {
                                        "description": "The list of guids to get current ratings for",
                                        "items": {
                                            "$ref": "#/x-common-definitions/company_guid"
                                        },
                                        "type": "array"
                                    },
                                    "use_license": {
                                        "default": false,
                                        "description": "Choice to spend licenses for any requested guid that is not in your portfolio. If False, it will not spend any licenses but indicates in the result if a license needs to be spent to view a rating for a particular company.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "rating_as_of": {
                                            "description": "The latest rating date",
                                            "format": "date",
                                            "type": "string"
                                        },
                                        "rating_licenses_used": {
                                            "description": "The number of licenses used to present the current results",
                                            "type": "integer"
                                        },
                                        "results": {
                                            "items": {
                                                "$ref": "#/components/schemas/CurrentRatingsEntityResults"
                                            },
                                            "type": "array"
                                        },
                                        "total_rating_licenses_remaining": {
                                            "description": "The total of licenses remaining",
                                            "type": "integer"
                                        },
                                        "total_rating_licenses_used": {
                                            "description": "The total of licenses used",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Current Ratings",
                    "Licenses"
                ]
            }
        },
        "/customers": {
            "post": {
                "description": "Create a Customer",
                "operationId": "createCustomer",
                "parameters": [
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "Customer": {
                                        "$ref": "#/components/schemas/Customer"
                                    }
                                },
                                "required": [
                                    "Customer"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        },
                        "description": "OK - Returns created Customer"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            }
        },
        "/customers/app-regions": {
            "get": {
                "description": "Get all app regions that can be accessed by the given customer",
                "operationId": "getCustomerAppRegions",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppRegions"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "AppRegions"
                ]
            },
            "post": {
                "description": "Modifies customer app regions based on the payload",
                "operationId": "PostCustomerAppRegions",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerAppRegionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppRegions"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "description": "Error"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiError"
                                }
                            }
                        },
                        "description": "Unexpected error"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "AppRegions"
                ]
            }
        },
        "/customers/current": {
            "get": {
                "description": "Get information about the current customer",
                "operationId": "getCurrentCustomer",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customer_settings": {
                                            "description": "Customer settings that can be modified.",
                                            "properties": {
                                                "auto_approve_invited_users": {
                                                    "description": "Whether to automatically approve users invited to the customer",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "date_joined": {
                                            "format": "datetime",
                                            "type": "string"
                                        },
                                        "guid": {
                                            "type": "string"
                                        },
                                        "is_active": {
                                            "type": "boolean"
                                        },
                                        "last_modified": {
                                            "format": "datetime",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customer_settings": {
                                        "description": "The customer settings to update",
                                        "properties": {
                                            "auto_approve_invited_users": {
                                                "description": "Whether to automatically approve users invited to the customer",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "customer_settings": {
                                            "description": "Customer settings that can be modified.",
                                            "properties": {
                                                "auto_approve_invited_users": {
                                                    "description": "Whether to automatically approve users invited to the customer",
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "date_joined": {
                                            "format": "datetime",
                                            "type": "string"
                                        },
                                        "guid": {
                                            "type": "string"
                                        },
                                        "is_active": {
                                            "type": "boolean"
                                        },
                                        "last_modified": {
                                            "format": "datetime",
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "detail": {
                                            "description": "The detail of errors with the request",
                                            "properties": {
                                                "customer_settings": {
                                                    "description": "The customer settings object with errors",
                                                    "items": {
                                                        "description": "The errors",
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            }
        },
        "/customers/current/features": {
            "get": {
                "description": "Get a list of features that can be toggled for an entire Customer",
                "operationId": "customer-features",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "feature_id": {
                                                "description": "Persistent identifier for the the feature",
                                                "type": "string"
                                            },
                                            "feature_type": {
                                                "description": "The type of feature. Either boolean, int, single_string, or string_set.",
                                                "type": "string"
                                            },
                                            "feature_value": {
                                                "description": "The current value of the feature for this customer",
                                                "nullable": true,
                                                "oneOf": [
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "integer"
                                                    }
                                                ]
                                            },
                                            "name": {
                                                "description": "Name of the feature",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    }
                },
                "tags": [
                    "Users",
                    "Customers"
                ]
            },
            "post": {
                "description": "Updates a feature for an entire customer by enabling or disabling it. User must be a Customer or VRM admin",
                "operationId": "customer-features-update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "feature_id": {
                                        "description": "Persistent identifier for the feature",
                                        "type": "string"
                                    },
                                    "feature_value": {
                                        "description": "Value to set the feature to. Strings will be cast to the appropriate type.",
                                        "oneOf": [
                                            {
                                                "type": "boolean"
                                            },
                                            {
                                                "type": "string"
                                            },
                                            {
                                                "type": "integer"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "feature_id": {
                                            "description": "Persistent identifier for the the feature",
                                            "type": "string"
                                        },
                                        "feature_type": {
                                            "description": "The type of feature. Either boolean, int, single_string, or string_set.",
                                            "type": "string"
                                        },
                                        "feature_value": {
                                            "description": "What the feature is now set to",
                                            "nullable": true,
                                            "oneOf": [
                                                {
                                                    "type": "boolean"
                                                },
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "integer"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Details of the updated feature"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Users",
                    "Customers"
                ]
            }
        },
        "/customers/{customer-guid}/api-tokens": {
            "get": {
                "description": "Get api-tokens created for a customer",
                "operationId": "getCustomersApiTokens",
                "parameters": [
                    {
                        "description": "The customer GUID or the string current used to represent the customer's guid",
                        "in": "path",
                        "name": "customer-guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of the response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/APIToken"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "Successful operation"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            },
            "post": {
                "description": "Create an api-token for a customer",
                "operationId": "createCustomersApiToken",
                "parameters": [
                    {
                        "description": "The customer GUID or the string 'current' used to represent the customer's guid",
                        "in": "path",
                        "name": "customer-guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of the response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "description": "A comment describing this api-token",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email address for the token created and where to send the retrieval email to",
                                        "type": "string"
                                    },
                                    "group": {
                                        "description": "Acess Control Group to relate token to",
                                        "type": "string"
                                    },
                                    "send_token_retrieval_email": {
                                        "default": false,
                                        "description": "Should a token retrieval email be sent to the email provided?",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIToken"
                                }
                            }
                        },
                        "description": "Successful create"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            }
        },
        "/customers/{customer-guid}/api-tokens/{api-guid}": {
            "delete": {
                "description": "Delete a customer's api-token",
                "operationId": "deleteCustomersApiToken",
                "parameters": [
                    {
                        "description": "The customer GUID or the string 'current' used to represent the customer's guid",
                        "in": "path",
                        "name": "customer-guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "GUID of api-token to be deleted",
                        "in": "path",
                        "name": "api-guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "format of the response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The api-token was successfully deleted"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            }
        },
        "/customers/{guid}": {
            "delete": {
                "description": "Deactivate a Customer",
                "operationId": "deactivateCustomer",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The Customer was successfully deactivated"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            },
            "get": {
                "description": "Get details for a Customer",
                "operationId": "getCustomer",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "Comma delimited list of fields to return in each result",
                        "in": "query",
                        "name": "fields",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer_Summary"
                                }
                            }
                        },
                        "description": "OK - Returns the given Customer"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            },
            "patch": {
                "description": "Update a Customer",
                "operationId": "updateCustomer",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customer": {
                                        "$ref": "#/components/schemas/Customer"
                                    }
                                },
                                "required": [
                                    "customer"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        },
                        "description": "OK - Returns updated 'Customer'"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            }
        },
        "/customers/{guid}/companies": {
            "post": {
                "description": "Add a List of Companies to the Customer",
                "operationId": "addCustomerCompanies",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "companies": {
                                        "description": "The List of Companies to be added",
                                        "items": {
                                            "$ref": "#/components/schemas/Company_Subscription"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "companies"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Company_Subscription"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK - Returns added List of Company Subscriptions"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "summary": "Add a List of Companies to the Customer",
                "tags": [
                    "Customers"
                ]
            }
        },
        "/customers/{guid}/purchases": {
            "get": {
                "description": "Get a List of all Purchases of the given Customer",
                "operationId": "getCustomerPurchases",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "Filter purchases for the Customer on the specified date",
                        "in": "query",
                        "name": "date",
                        "required": false,
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Purchase"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK - Returns a List of all Purchases of the given Customer"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "summary": "Get a List of all Purchases of the given Customer",
                "tags": [
                    "Customers"
                ]
            },
            "post": {
                "description": "Add a List of Purchases to the Customer",
                "operationId": "addCustomerPurchases",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "purchases": {
                                        "description": "The List of Purchases to be added",
                                        "items": {
                                            "$ref": "#/components/schemas/Purchase"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "purchase"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Purchase"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK - Returns added List of Purchases"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "summary": "Add a List of Purchases to the Customer",
                "tags": [
                    "Customers"
                ]
            }
        },
        "/customers/{guid}/purchases/bulk": {
            "post": {
                "description": "Update a List of Purchases for a Customer",
                "operationId": "CustomerPurchasesOperations",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "purchases_operations": {
                                        "$ref": "#/components/schemas/PurchasesOperations"
                                    }
                                },
                                "required": [
                                    "purchases_operations"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SucceededPurchasesOperations"
                                }
                            }
                        },
                        "description": "OK - Returns succeeded List of operations on Purchases"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "summary": "Update a List of Purchases for a Customer",
                "tags": [
                    "Customers"
                ]
            }
        },
        "/customers/{guid}/purchases/{purchase_guid}": {
            "delete": {
                "description": "Delete a Purchase for a Customer.",
                "operationId": "deletePurchase",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "GUID of the Purchase",
                        "in": "path",
                        "name": "purchase_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The Purchase was successfully deleted"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            },
            "patch": {
                "description": "Update a given Purchase for a Customer",
                "operationId": "updatePurchase",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "GUID of the Purchase",
                        "in": "path",
                        "name": "purchase_guid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "purchase": {
                                        "$ref": "#/components/schemas/Purchase"
                                    }
                                },
                                "required": [
                                    "purchase"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Purchase"
                                }
                            }
                        },
                        "description": "OK - Returns updated 'Purchase'"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "summary": "Update a given Purchase for a Customer",
                "tags": [
                    "Customers"
                ]
            }
        },
        "/customers/{guid}/users": {
            "post": {
                "description": "Add a User to the Customer",
                "operationId": "createCustomersUser",
                "parameters": [
                    {
                        "description": "GUID of the Customer",
                        "in": "path",
                        "name": "guid",
                        "required": true,
                        "schema": {
                            "$ref": "#/x-common-definitions/customer_guid"
                        }
                    },
                    {
                        "description": "format of response data",
                        "in": "query",
                        "name": "format",
                        "required": false,
                        "schema": {
                            "default": "json",
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                },
                                "required": [
                                    "user"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "OK - Returns added User"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadData"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/PermissionDenied"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                },
                "security": [
                    {
                        "Jwt": []
                    },
                    {
                        "Token": []
                    }
                ],
                "tags": [
                    "Customers"
                ]
            }
        }
    }
}